{"version":3,"file":"src_app_features_manager_manager_module_ts.js","mappings":"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","sources":["./src/app/core/models/datamodels/Contract.ts","./src/app/core/services/building.service.ts","./src/app/core/services/contract.service.ts","./src/app/core/services/meter.service.ts","./src/app/core/services/provider.service.ts","./src/app/core/services/wallet.service.ts","./src/app/features/manager/building-view/building-form/building-form.component.ts","./src/app/features/manager/building-view/building-form/building-form.component.html","./src/app/features/manager/building-view/building-view.component.ts","./src/app/features/manager/building-view/building-view.component.html","./src/app/features/manager/chart-view/chart-view.component.ts","./src/app/features/manager/chart-view/chart-view.component.html","./src/app/features/manager/contract-view/contract-form/contract-form.component.ts","./src/app/features/manager/contract-view/contract-form/contract-form.component.html","./src/app/features/manager/contract-view/contract-view.component.ts","./src/app/features/manager/contract-view/contract-view.component.html","./src/app/features/manager/contract-view/price-view/price-form/price-form.component.ts","./src/app/features/manager/contract-view/price-view/price-form/price-form.component.html","./src/app/features/manager/contract-view/price-view/price-view.component.ts","./src/app/features/manager/contract-view/price-view/price-view.component.html","./src/app/features/manager/customer-view/customer-form/customer-form.component.ts","./src/app/features/manager/customer-view/customer-form/customer-form.component.html","./src/app/features/manager/customer-view/customer-view.component.ts","./src/app/features/manager/customer-view/customer-view.component.html","./src/app/features/manager/layouts/dynamic-table/dynamic-table.component.ts","./src/app/features/manager/layouts/dynamic-table/dynamic-table.component.html","./src/app/features/manager/manager-routing.module.ts","./src/app/features/manager/manager.module.ts","./src/app/features/manager/meter-view/meter-form/meter-form.component.ts","./src/app/features/manager/meter-view/meter-form/meter-form.component.html","./src/app/features/manager/meter-view/meter-history/meter-history-form/meter-history-form.component.ts","./src/app/features/manager/meter-view/meter-history/meter-history-form/meter-history-form.component.html","./src/app/features/manager/meter-view/meter-history/meter-history.component.ts","./src/app/features/manager/meter-view/meter-history/meter-history.component.html","./src/app/features/manager/meter-view/meter-view.component.ts","./src/app/features/manager/meter-view/meter-view.component.html","./src/app/features/manager/provider-view/provider-view.component.ts","./src/app/features/manager/provider-view/provider-view.component.html","./src/app/features/manager/wallet-view/wallet-form/wallet-form.component.ts","./src/app/features/manager/wallet-view/wallet-form/wallet-form.component.html","./src/app/features/manager/wallet-view/wallet-meter-form/wallet-meter-form.component.ts","./src/app/features/manager/wallet-view/wallet-meter-form/wallet-meter-form.component.html","./src/app/features/manager/wallet-view/wallet-view.component.ts","./src/app/features/manager/wallet-view/wallet-view.component.html","./node_modules/export-from-json/dist/esm/converters.js","./node_modules/export-from-json/dist/esm/exportFromJSON.js","./node_modules/export-from-json/dist/esm/index.js","./node_modules/export-from-json/dist/esm/processors.js","./node_modules/export-from-json/dist/esm/types.js","./node_modules/export-from-json/dist/esm/utils.js"],"sourcesContent":["import { ContractEnergyType } from \"./ContractEnergyType\";\r\nimport { ContractType } from \"./ContractType\";\r\n\r\nexport class Contract{\r\n\r\n    id?: string;\r\n\r\n    startDate?: string;\r\n\r\n    endDate?: string;\r\n\r\n    providerId?: string;\r\n\r\n    providerName?: string;\r\n\r\n    contractType?: ContractType;\r\n\r\n    buildingId?: string;\r\n\r\n    buildingAdress? : string;\r\n\r\n    customerId?: string;\r\n\r\n    customerName?: string;\r\n    \r\n    contractEnergyType?: ContractEnergyType[];\r\n\r\n    public constructor(id:string, startDate:string, endDate:string, providerId:string, contractType:ContractType, buildingId:string, customerId:string){\r\n        this.id = id;\r\n        this.startDate = startDate;\r\n        this.endDate = endDate;\r\n        this.providerId = providerId;\r\n        this.contractType = contractType;\r\n        this.buildingId = buildingId;\r\n        this.customerId = customerId;\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Building } from '../models/datamodels/Building';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BuildingService {\r\n\r\n  private readonly baseUrl: string = environment.baseUrl + environment.apiURL;\r\n\r\n  constructor(private readonly httpClient: HttpClient) { }\r\n\r\n  public getAllBuildings(offset: number, limit: number): Observable<Building[]> {\r\n    return this.httpClient.get<Building[]>(this.baseUrl+`/building/getAllBuildings?offset=${offset}&limit=${limit}`);\r\n  }\r\n\r\n  public countAllBuildings(): Observable<number> {\r\n    return this.httpClient.get<number>(this.baseUrl+`/building/countAllBuildings`);\r\n  }\r\n\r\n  public getBuildingByCustomerId(customerId: string, offset: number, limit: number): Observable<Building[]> {\r\n    return this.httpClient.get<Building[]>(this.baseUrl+`/building/getBuildingByCustomerId?customerId=${customerId}&offset=${offset}&limit=${limit}`)\r\n  }\r\n\r\n  public countBuildingByCustomerId(customerId: string): Observable<number> {\r\n    return this.httpClient.get<number>(this.baseUrl+`/building/countBuildingByCustomerId?customerId=${customerId}`);\r\n  }\r\n\r\n  public getBuildingById(id: string): Observable<Building> {\r\n    return this.httpClient.get<Building>(this.baseUrl+`/building/getBuildingById?id=${id}`);\r\n  }\r\n\r\n  public createBuilding(building: Building, customerId: string): Observable<string>{\r\n    return this.httpClient.post(this.baseUrl+`/building/createBuilding?customerId=${customerId}`, building, {responseType: 'text'});\r\n  }\r\n\r\n  public deleteBuilding(id: string): Observable<string>{\r\n    return this.httpClient.delete<string>(this.baseUrl+`/building/deleteBuildingById?id=${id}`);\r\n  }\r\n\r\n  public updateBuilding(building: Building): Observable<string>{\r\n    return this.httpClient.put<string>(this.baseUrl+`/building/updateBuilding`, building);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Contract } from '../models/datamodels/Contract';\r\nimport { ContractEnergyType } from '../models/datamodels/ContractEnergyType';\r\nimport { ContractType } from '../models/datamodels/ContractType';\r\nimport { EnergyType } from '../models/datamodels/EnergyType';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ContractService {\r\n\r\n  private readonly baseUrl: string = environment.baseUrl + environment.apiURL;\r\n\r\n  constructor(private readonly httpClient: HttpClient) { }\r\n\r\n  \r\n  public getAllContracts(): Observable<Contract[]> {\r\n    return this.httpClient.get<Contract[]>(this.baseUrl+\"/contract/getAllContracts\");\r\n  }\r\n\r\n  public getContractsByCustomerId(customerId: string, offset: number, limit:number): Observable<Contract[]> {\r\n    return this.httpClient.get<Contract[]>(this.baseUrl+`/contract/getContractByCustomerId?customerId=${customerId}&offset=${offset}&limit=${limit}`);\r\n  }\r\n\r\n  public countContractByCustomerId(customerId: string): Observable<number> {\r\n    return this.httpClient.get<number>(this.baseUrl+`/contract/countContractByCustomerId?customerId=${customerId}`);\r\n  }\r\n\r\n  public getContractsByProviderId(providerId: string, offset: number, limit:number): Observable<Contract[]> {\r\n    return this.httpClient.get<Contract[]>(this.baseUrl+`/contract/getContractByProviderId?providerId=${providerId}&offset=${offset}&limit=${limit}`);\r\n  }\r\n\r\n  public countContractByProviderId(providerId: string): Observable<number> {\r\n    return this.httpClient.get<number>(this.baseUrl+`/contract/countContractByProviderId?providerId=${providerId}`);\r\n  }\r\n\r\n  public createContract(contract: Contract): Observable<string>{\r\n    return this.httpClient.post(this.baseUrl+\"/contract/createContract\", contract, {responseType: 'text'}); \r\n  }\r\n\r\n  public getAllContractTypes(): Observable<ContractType[]> {\r\n    return this.httpClient.get<ContractType[]>(this.baseUrl+\"/contractType/getAllContractTypes\");\r\n  }\r\n\r\n  //should be placed in another service ... utility.service.ts ? \r\n  public getAllEnergyTypes(): Observable<EnergyType[]>{\r\n    return this.httpClient.get<EnergyType[]>(this.baseUrl+\"/energyType/getAllEnergyTypes\")\r\n  }\r\n\r\n  public updateContract(contract: Contract): Observable<Contract>{\r\n    return this.httpClient.put<Contract>(this.baseUrl+\"/contract/updateContract\", contract)\r\n  }\r\n  \r\n  public getEnergyTypeByProviderId(providerId: string): Observable<EnergyType[]>{\r\n    return this.httpClient.get<EnergyType[]>(this.baseUrl+`/energyType/getEnergyTypeByProviderId?providerId=${providerId}`);\r\n  }\r\n\r\n  public getContractEnergyTypeByContractId(contractId: string): Observable<ContractEnergyType[]>{\r\n    return this.httpClient.get<ContractEnergyType[]>(this.baseUrl+`/contractEnergyType/getContractEnergyTypeByContractId?contractId=${contractId}`);\r\n  }\r\n\r\n  public createContractEnergyType(contractEnergyType: ContractEnergyType, contractId: string): Observable<string> {\r\n    return this.httpClient.post(this.baseUrl+`/contractEnergyType/createContractEnergyType?contractId=${contractId}`, contractEnergyType, {responseType: 'text'});\r\n  }\r\n\r\n  public updateContractEnergyType(contractEnergyType: ContractEnergyType): Observable<string> {\r\n    return this.httpClient.put<string>(this.baseUrl+\"/contractEnergyType/updateContractEnergyType\", contractEnergyType);\r\n  }\r\n\r\n  public deleteContractEnergyTypeById(id: number): Observable<string> {\r\n    return this.httpClient.delete<string>(this.baseUrl+`/contractEnergyType/deleteContractEnergyTypeById?id=${id}`);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { EnergyType } from '../models/datamodels/EnergyType';\r\nimport { Meter } from '../models/datamodels/Meter';\r\nimport { MeterHistory } from '../models/datamodels/MeterHistory';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class MeterService {\r\n \r\n  private readonly baseUrl: string = environment.baseUrl + environment.apiURL;\r\n\r\n  constructor(private readonly httpClient: HttpClient) { }\r\n\r\n  public getAllMeter(): Observable<Meter[]>{\r\n    return this.httpClient.get<Meter[]>(this.baseUrl+\"/meter/getAllMeters\");\r\n  }\r\n\r\n  public getMetersByBuildingId(buildingId: string): Observable<Meter[]>{\r\n    return this.httpClient.get<Meter[]>(this.baseUrl+`/meter/getMetersByBuildingId?buildingId=${buildingId}`);\r\n  }\r\n\r\n  public getMetersByWalletId(walletId: string): Observable<Meter[]>{\r\n    return this.httpClient.get<Meter[]>(this.baseUrl+`/meter/getMetersByWalletId?walletId=${walletId}`);\r\n  }\r\n\r\n  public getMeterHistoryByMeterId(meterId: string, offset: number, limit: number, columnName:string = \"date\", order: number = -1): Observable<MeterHistory[]>{\r\n    return this.httpClient.get<MeterHistory[]>(this.baseUrl+`/meterHistory/getMeterHistoryByMeterId?meterId=${meterId}&offset=${offset}&limit=${limit}&columnName=${columnName}&order=${order}`);\r\n  }\r\n\r\n  public getMeterHistoryByMeterIdUsingDate(meterId: string, startDate: string, endDate: string): Observable<MeterHistory[]>{\r\n    return this.httpClient.get<MeterHistory[]>(this.baseUrl+`/meterHistory/getMeterHistoryByMeterIdUsingDate?meterId=${meterId}&startDate=${startDate}&endDate=${endDate}`);\r\n  }\r\n\r\n  public countMeterHistoryByMeterId(meterId: string): Observable<number>{\r\n    return this.httpClient.get<number>(this.baseUrl+`/meterHistory/countMeterHistoryByMeterId?meterId=${meterId}`);\r\n  }\r\n\r\n  public createMeter(meter: Meter, buildingId: string): Observable<string>{\r\n    return this.httpClient.post(this.baseUrl+`/meter/createMeter?buildingId=${buildingId}`, meter, {responseType: 'text'});\r\n  }\r\n\r\n  public deleteMeter(id: string): Observable<string>{\r\n    return this.httpClient.delete<string>(this.baseUrl+`/meter/deleteMeterById?id=${id}`);\r\n  }\r\n\r\n  public updateMeter(meter: Meter): Observable<string>{\r\n    return this.httpClient.put<string>(this.baseUrl+`/meter/updateMeter`, meter);\r\n  }\r\n\r\n  public getAllEnergyTypes(): Observable<EnergyType[]>{\r\n    return this.httpClient.get<EnergyType[]>(this.baseUrl+\"/energyType/getAllEnergyTypes\")\r\n  }\r\n\r\n  public deleteMeterHistoryById(id: number): Observable<string>{\r\n    return this.httpClient.delete<string>(this.baseUrl+`/meterHistory/deleteMeterHistoryById?id=${id}`);\r\n  }\r\n\r\n  public updateMeterHistory(meterHistory: MeterHistory): Observable<string>{\r\n    return this.httpClient.put<string>(this.baseUrl+`/meterHistory/updateMeterHistory`, meterHistory);\r\n  }\r\n\r\n  public createMeterHistory(meterHistory : MeterHistory, meterId: string): Observable<string>{\r\n    return this.httpClient.post<string>(this.baseUrl+`/meterHistory/createMeterHistory?meterId=${meterId}`, meterHistory);\r\n  }\r\n}\r\n"," import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Provider } from '../models/datamodels/Provider';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ProviderService {\r\n\r\n  private readonly baseUrl: string = environment.baseUrl + environment.apiURL;\r\n\r\n  constructor(private readonly httpClient: HttpClient) { }\r\n\r\n  public getAllProviders(): Observable<Provider[]>{\r\n    return this.httpClient.get<Provider[]>(this.baseUrl+\"/provider/getAllProviders\");\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Wallet } from '../models/datamodels/Wallet';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class WalletService {\r\n\r\n  private readonly baseUrl: string = environment.baseUrl + environment.apiURL;\r\n\r\n  constructor(private readonly httpClient: HttpClient) { }\r\n\r\n  public getAllWallets(): Observable<Wallet[]>{\r\n    return this.httpClient.get<Wallet[]>(this.baseUrl+\"/wallet/getAllWallets\");\r\n  }\r\n\r\n  public getWalletByCustomerId(customerId:string): Observable<Wallet[]>;\r\n  public getWalletByCustomerId(customerId:string, offset:number, limit:number): Observable<Wallet[]>;\r\n  public getWalletByCustomerId(customerId:string, offset?:number, limit?:number): Observable<Wallet[]>{\r\n    if(offset === undefined || limit === undefined){\r\n      return this.httpClient.get<Wallet[]>(this.baseUrl+`/wallet/getWalletByCustomerId?customerId=${customerId}`);\r\n    } \r\n    return this.httpClient.get<Wallet[]>(this.baseUrl+`/wallet/getWalletByCustomerId?customerId=${customerId}&offset=${offset}&limit=${limit}`);\r\n  }\r\n\r\n  public countWalletByCustomerId(customerId: string):Observable<number>{\r\n    return this.httpClient.get<number>(this.baseUrl+`/wallet/countWalletByCustomerId?customerId=${customerId}`);\r\n  }\r\n\r\n  public createWallet(buildingId: string, customerId: string):Observable<string>{\r\n    return this.httpClient.post(this.baseUrl+`/wallet/createWallet?customerId=${customerId}&buildingId=${buildingId}`, null,  {responseType: 'text'});\r\n  }\r\n\r\n  public createWalletMeter(walletId: string, meterId: string):Observable<string>{\r\n    return this.httpClient.post(this.baseUrl+`/walletMeter/createWalletMeter?meterId=${meterId}&walletId=${walletId}`, null,  {responseType: 'text'});\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n//models\r\nimport { Building } from 'src/app/core/models/datamodels/Building';\r\n\r\n//components\r\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\r\n\r\n//services\r\nimport { BuildingService } from 'src/app/core/services/building.service';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-building-form',\r\n  templateUrl: './building-form.component.html',\r\n  styleUrls: ['./building-form.component.scss'],\r\n  providers: [ConfirmationService]\r\n})\r\n\r\nexport class BuildingFormComponent implements OnInit{\r\n  \r\n  private _building: Building;\r\n  \r\n  public buildingForm: FormGroup;\r\n\r\n  public modeForm: \"create\" | \"edit\";\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n     private readonly buildingService: BuildingService, \r\n     public ref: DynamicDialogRef, \r\n     public config: DynamicDialogConfig,\r\n     private confirmationService: ConfirmationService,\r\n     private translateService: TranslateService) {}\r\n  \r\n  ngOnInit(): void {\r\n\r\n    this.initForm();\r\n  }\r\n\r\n\r\n  private async initForm(): Promise<void>{\r\n    this.buildingForm = this.fb.group({\r\n      id: [null],\r\n      buildingName: [''],\r\n      city: ['', Validators.required],\r\n      number: ['', Validators.required],\r\n      room: ['', Validators.required],\r\n      street: ['', Validators.required],\r\n      zipCode: ['', Validators.required],\r\n      main: [false, Validators.required]\r\n    });\r\n\r\n    if(this.config.data){\r\n      this.modeForm = \"edit\";\r\n      await this.buildingService.getBuildingById(this.config.data).toPromise().then((building: Building) => {\r\n        this._building = building;\r\n        this.updateForm();\r\n      });\r\n    }else{\r\n      this.modeForm = \"create\";\r\n    }\r\n  }\r\n\r\n  public cancelDialog(): void{\r\n    this.translateService.get(\"cancelMessage\").subscribe(translation => {\r\n      this.confirmationService.confirm({\r\n        message: translation,\r\n        key: 'cancelDialog',\r\n        accept: () => {\r\n          this.ref.close();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public saveDialog(): void{\r\n    if(this.buildingForm.valid){\r\n      this.translateService.get(\"saveMessage\").subscribe(translation => {\r\n        this.confirmationService.confirm({\r\n          message: translation,\r\n          key: 'saveDialog',\r\n          accept: () => {\r\n            this._building = this.buildingForm.value;\r\n            this.ref.close(this._building);\r\n          }\r\n        }); \r\n      });\r\n    }\r\n  }\r\n\r\n  private updateForm(): void {\r\n    this.buildingForm.patchValue(this._building);\r\n  }\r\n}\r\n","<div  class=\"dialog-component\">\r\n    <section class=\"form-section\">\r\n        <form class=\"grid-form\" [formGroup]=\"buildingForm\">\r\n            <label class=\"label\" >{{ \"name\" | translate }}</label>\r\n            <input class=\"field purple-input\" formControlName=\"buildingName\" type=\"text\" pInputText />\r\n                \r\n            <label class=\"label\" >{{ \"city\" | translate }}<span>*</span></label>\r\n            <input class=\"field purple-input\" formControlName=\"city\" type=\"text\" pInputText />\r\n               \r\n            <label class=\"label\" >{{ \"number\" | translate }}<span>*</span></label>\r\n            <p-inputNumber class=\"field form-inputNumber purple-inputnumber\" [min]=\"0\" formControlName=\"number\"></p-inputNumber>\r\n                \r\n            <label class=\"label\"  >{{ \"room\" | translate }}<span>*</span></label>\r\n            <p-inputNumber class=\"field form-inputNumber purple-inputnumber\" [min]=\"0\" formControlName=\"room\"></p-inputNumber>\r\n                \r\n            <label class=\"label\"  >{{ \"street\" | translate }}<span>*</span></label>\r\n            <input class=\"field purple-input\" formControlName=\"street\" type=\"text\" pInputText />\r\n                \r\n            <label class=\"label\"  >{{ \"zipcode\" | translate }}<span>*</span></label>\r\n            <p-inputNumber class=\"field form-inputNumber purple-inputnumber\" [min]=\"0\" formControlName=\"zipCode\"></p-inputNumber>\r\n                \r\n            <label class=\"label\"  >{{ \"mainbuilding\" | translate }}<span>*</span></label>\r\n            <p-checkbox class=\"field purple-checkbox\" formControlName=\"main\" [binary]=\"true\"></p-checkbox>        \r\n        </form>\r\n    </section>\r\n    <section class=\"form-required\">\r\n        <div>required*</div>\r\n    </section>\r\n    <app-form-status [validity]= \"buildingForm.valid\" ></app-form-status>\r\n    <div>\r\n        <button  pButton label='{{ \"cancel\" | translate }}' icon=\"pi pi-times\" class=\"p-button-text purple-button-text\" (click)=\"cancelDialog()\"></button>\r\n        <button [disabled]=\"!buildingForm.valid\"  pButton label='{{ \"save\" | translate }}' icon=\"pi pi-check\" class=\"p-button-text purple-button-text\" (click)=\"saveDialog()\"></button>\r\n    </div>\r\n    <!--Dialogs-->\r\n    <p-confirmDialog class=\"purple-confirmdialog\" key=\"cancelDialog\" header=\"Cancel operation?\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n    <p-confirmDialog class=\"purple-confirmdialog\" key=\"saveDialog\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n//models\r\nimport { Building } from 'src/app/core/models/datamodels/Building';\r\nimport { DynamicColumn } from 'src/app/core/models/utility/DynamicColumn';\r\nimport { IFormable } from 'src/app/core/models/utility/IFormable';\r\nimport { IRefreashable } from 'src/app/core/models/utility/IRefreshable';\r\n\r\n//components\r\nimport { BuildingFormComponent } from './building-form/building-form.component';\r\n\r\n//services\r\nimport { LocalService } from 'src/app/core/services/local.service';\r\nimport { RouteHistoryService } from 'src/app/core/directives/route-history.service';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { BuildingService } from 'src/app/core/services/building.service';\r\nimport { PaginationParams } from 'src/app/core/models/utility/PaginationParams';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-building-view',\r\n  templateUrl: './building-view.component.html',\r\n  styleUrls: ['./building-view.component.scss']\r\n})\r\n\r\nexport class BuildingViewComponent implements OnInit, IRefreashable, IFormable {\r\n  \r\n  public buildings: Building[];\r\n  \r\n  public buildingsCounter: number;\r\n\r\n  public cols: DynamicColumn[];\r\n\r\n  public selectedBuilding: Building;\r\n\r\n  public currentCustomerId: string;\r\n\r\n  public formHeader: string;\r\n\r\n  public isLoading: boolean = false; \r\n\r\n  public paginationParams: PaginationParams;\r\n\r\n  constructor(\r\n    private readonly activatedRoute: ActivatedRoute, \r\n    private readonly router: Router, \r\n    private readonly buildingService: BuildingService, \r\n    public dialogService: DialogService,\r\n    private routeHistory: RouteHistoryService,\r\n    private translateService: TranslateService,\r\n    private localStorage: LocalService) {}\r\n  \r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'buildingName', header: 'name'},\r\n      {field: 'city', header: 'city'},\r\n      {field: 'number', header: 'number'},\r\n      {field: 'room', header: 'room'},\r\n      {field: 'street', header: 'street'},\r\n      {field: 'zipCode', header: 'zipcode'},\r\n      {field: 'main', header:'main'}\r\n    ];\r\n\r\n    this.paginationParams = {\r\n      first: 0,\r\n      rowsNumber: 5\r\n    };\r\n    \r\n    this.refreshData();\r\n  }\r\n\r\n  public createFormDialog(): void {\r\n    this.translateService.get(\"buildingform\").subscribe(translation => {\r\n      const ref = this.dialogService.open(BuildingFormComponent,\r\n        {\r\n          header: translation,\r\n          draggable: true,\r\n          resizable: true,\r\n          maximizable: true\r\n        });\r\n        ref.onClose.subscribe((building: Building) => {\r\n          if(building){\r\n            this.buildingService.createBuilding(building, this.currentCustomerId).subscribe(() => {\r\n              this.refreshData();\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  public editFormDialog(data: any): void {\r\n    this.translateService.get(\"buildingform\").subscribe(translation => {\r\n      const ref = this.dialogService.open(BuildingFormComponent,\r\n        {\r\n          header: translation,\r\n          data: data.id,\r\n          draggable: true,\r\n          resizable: true,\r\n          maximizable: true\r\n        });\r\n        ref.onClose.subscribe((building: Building) => {\r\n          if(building){\r\n            this.buildingService.updateBuilding(building).subscribe(() => {\r\n              this.refreshData();\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  public onBuildingSelected(building: Building): void {\r\n    this.selectedBuilding = building;\r\n  }\r\n\r\n  public deleteBuilding(id: any): void {\r\n    this.buildingService.deleteBuilding(id).subscribe(() => {\r\n      this.refreshData();\r\n    });\r\n  }\r\n\r\n  public updatePaginationParams(params: PaginationParams): void{\r\n    this.paginationParams = params;\r\n    this.refreshData();\r\n  }\r\n\r\n  public refreshData(): void {\r\n    if(JSON.parse(this.localStorage.getData(\"roles\")).includes(\"USER\")){\r\n      this.currentCustomerId = this.localStorage.getData(\"id\")\r\n    }else{\r\n      this.currentCustomerId = this.activatedRoute.snapshot.params['customerId'];\r\n    }\r\n    this.isLoading = true;\r\n    this.loadBuildingsByCustomerId();\r\n  }\r\n \r\n  private async loadBuildingsByCustomerId(): Promise<void>{\r\n    await this.buildingService.countBuildingByCustomerId(this.currentCustomerId).toPromise().then((buildingsCounter: number) => {\r\n      this.buildingsCounter = buildingsCounter;\r\n    });\r\n    await this.buildingService.getBuildingByCustomerId(\r\n      this.currentCustomerId, \r\n      this.paginationParams.first, \r\n      this.paginationParams.rowsNumber).toPromise().then((buildings: Building[]) =>{\r\n        this.buildings = buildings;\r\n        this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  public onShowMetersClick(): void{\r\n    this.router.navigateByUrl(`/manager/building/${this.selectedBuilding.id}/meters`);\r\n  }\r\n\r\n  public onPreviousClick(): void{\r\n    this.routeHistory.back();\r\n  }\r\n  \r\n  public isAdmin(): boolean{\r\n    return JSON.parse(this.localStorage.getData(\"roles\")).includes(\"ADMIN\");\r\n  }\r\n\r\n  public onShowChartClick(): void{\r\n    this.router.navigateByUrl(`/manager/chart/${this.selectedBuilding.id}`);   \r\n  }\r\n}\r\n","<div  class=\"building-view view\">\r\n    <section class=\"header-view\">\r\n        \r\n    </section>\r\n    <section class=\"table-toolbar\">\r\n        <p-toolbar class=\"toolbar\" styleClass=\"mb-4 gap-2\">\r\n            <ng-template pTemplate=\"left\" class=\"left-side-toolbar\">\r\n                <div class=\"router-actions rv-separator\">\r\n                    <button  pButton (click)=\"onPreviousClick()\" label='{{ \"previous\" | translate }}' icon=\"pi pi-chevron-left\" class=\"p-button-sm p-button-secondary\"></button>\r\n                </div>\r\n                <div class=\"table-actions\" *ngIf=\"isAdmin()\">\r\n                    <button  pButton (click)=\"createFormDialog()\" label='{{ \"new\" | translate }}' icon=\"pi pi-plus\" class=\"p-button-sm purple-button\"></button>\r\n                </div>        \r\n            </ng-template>\r\n            <ng-template pTemplate=\"right\" class=\"right-side-toolbar\">\r\n                <button  pButton (click)=\"onShowMetersClick()\" [disabled]=\"selectedBuilding == null\" label='{{ \"showmeter\" | translate }}' icon=\"pi pi-info-circle\" class=\"p-button-sm purple-button\"></button>\r\n                <button  pButton (click)=\"onShowChartClick()\" [disabled]=\"selectedBuilding == null\" label='{{ \"visualcons\" | translate }}' icon=\"pi pi-info-circle\" class=\"p-button-sm purple-button\"></button>\r\n            </ng-template>\r\n        </p-toolbar>\r\n    </section>\r\n    <section class=\"table-container\">\r\n        <app-dynamic-table \r\n            [collection]=\"buildings\" \r\n            [totalRecords]=\"buildingsCounter\"\r\n            [cols]=\"cols\" \r\n            [isEditable] = \"isAdmin()\"\r\n            [isDeletable] = \"isAdmin()\"\r\n            [isLoading]=\"isLoading\"\r\n            [isPaginable]=\"true\"\r\n            (onEdit)=\"editFormDialog($event)\" \r\n            (onDelete)=\"deleteBuilding($event)\"\r\n            (onSelect)=\"onBuildingSelected($event)\"\r\n            (onPageChange)=\"updatePaginationParams($event)\">\r\n        </app-dynamic-table>\r\n    </section>\r\n</div>\r\n","import {AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n//models\r\nimport { ChartTable } from 'src/app/core/models/datamodels/ChartTable';\r\nimport { MeterHistory } from 'src/app/core/models/datamodels/MeterHistory';\r\nimport { Meter } from 'src/app/core/models/datamodels/Meter';\r\n\r\n//components\r\nimport { MenuItem } from 'primeng/api';\r\nimport { UIChart } from 'primeng/chart';\r\nimport { DynamicColumn } from 'src/app/core/models/utility/DynamicColumn';\r\n\r\n//services\r\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\r\nimport exportFromJSON from 'export-from-json'\r\nimport { MeterService } from 'src/app/core/services/meter.service';\r\n\r\n@Component({\r\n  selector: 'app-chart-view',\r\n  templateUrl: './chart-view.component.html',\r\n  styleUrls: ['./chart-view.component.scss']\r\n})\r\n\r\nexport class ChartViewComponent implements OnInit, AfterViewInit{\r\n  @ViewChild('myChart') chart: UIChart;\r\n\r\n  public items: MenuItem[];\r\n\r\n  public chartTable: ChartTable[];\r\n\r\n  public checked: boolean = true;\r\n\r\n  public isLoad: boolean = false; \r\n\r\n  public basicData : any;\r\n\r\n  public basicOptions: any;\r\n\r\n  private _currentId : any;\r\n\r\n  private _meters: Array<Meter>;\r\n\r\n  private _histories: Map<Meter, MeterHistory[]> = new Map<Meter, MeterHistory[]>();\r\n\r\n  public cols: DynamicColumn[];\r\n\r\n  public formHeader: string;\r\n\r\n  private _hasMonth: boolean;\r\n  \r\n  private month: Record<string, string>= {\r\n    \"january\": '01',\r\n    \"february\": '02',\r\n    \"march\": '03',\r\n    \"april\": '04',\r\n    \"may\": '05',\r\n    \"june\": '06',\r\n    \"july\": '07',\r\n    \"august\": '08',\r\n    \"september\": '09',\r\n    \"october\": '10',\r\n    \"november\": '11',\r\n    \"december\": '12'\r\n  };\r\n\r\n  private colors: Record<number, string> = {\r\n    1: \"#e9c752\",\r\n    2: \"#1E2EDE\",\r\n    3: \"#890F0F\"\r\n  };\r\n\r\n  private names: Record<number, string> = {\r\n    1: \"electricity\",\r\n    2: \"water\" ,\r\n    3: \"gas\"\r\n  };\r\n\r\n  private translateName : Record<string, string> = {\r\n    \"Electricity\": \"electricity\",\r\n    \"Water\": \"water\",\r\n    \"Gas\": \"gas\",\r\n    \"Electricité\": \"electricity\",\r\n    \"Eau\": \"water\",\r\n    \"Gaz\": \"gas\"\r\n  };\r\n\r\n  private translateMonth: Record<string, string> = {\r\n    \"January\": \"january\",\r\n    \"February\": \"february\",\r\n    \"March\": \"march\",\r\n    \"April\": \"april\",\r\n    \"May\": \"may\",\r\n    \"June\": \"june\",\r\n    \"July\": \"july\",\r\n    \"August\": \"august\",\r\n    \"September\": \"september\",\r\n    \"October\": \"october\",\r\n    \"November\": \"november\",\r\n    \"December\": \"december\",\r\n    \"Janvier\": \"january\",\r\n    \"Février\": \"february\",\r\n    \"Mars\": \"march\",\r\n    \"Avril\": \"april\",\r\n    \"Mai\": \"may\",\r\n    \"Juin\": \"june\",\r\n    \"Juillet\": \"july\",\r\n    \"Août\": \"august\",\r\n    \"Septembre\": \"september\",\r\n    \"Octobre\": \"october\",\r\n    \"Novembre\": \"november\",\r\n    \"Décembre\": \"december\"\r\n  };\r\n\r\n  constructor(\r\n    private readonly activatedRoute: ActivatedRoute,\r\n    private readonly meterService: MeterService,\r\n    public translateService: TranslateService ){}\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => {\r\n      if(this.chart)\r\n        this.chart.reinit();\r\n    });\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n\r\n    this.basicOptions = {\r\n      plugins: {\r\n        datalabels:{\r\n          align:\"end\",\r\n          anchor:\"end\",\r\n          borderRadius: 4,\r\n          backgroundColor: \"#6B6FD5\",\r\n          color:\"white\"\r\n        },\r\n        legend:  \r\n        { \r\n          display : true, \r\n          labels: {color: '#495057'}\r\n        }\r\n      }\r\n    };\r\n\r\n    this.chartTable = [];\r\n\r\n    this.items = [\r\n      {\r\n          label: 'JSON',\r\n          command: () => this.exportJSON(this.chartTable)\r\n      },\r\n      {\r\n        label: 'XML',\r\n        command: () => this.exportXML(this.chartTable)\r\n      }\r\n  ];\r\n\r\n\r\n    this.cols = [\r\n      {field: 'date', header: 'date'},\r\n      {field: 'energyType', header: 'energytype'},\r\n      {field: 'value', header: 'value'}    \r\n    ];\r\n\r\n    this.showSeven().then(() => {\r\n      this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\r\n          this.refreshLabels();\r\n      });\r\n    });\r\n  }\r\n\r\n  public refreshLabels(): void{\r\n    this.basicData.datasets.forEach(element => {\r\n      this.translateService.get(this.translateName[element.label]).subscribe(translation => {\r\n        element.label = translation\r\n      });\r\n    });\r\n\r\n    if(this._hasMonth){\r\n      this.refreshLabelsMonth();\r\n    }\r\n\r\n    if(this.checked){\r\n      this.chart.reinit();\r\n    }\r\n  }\r\n\r\n  public refreshLabelsMonth(): void{\r\n    for (let index = 0; index < this.basicData.labels.length; index++) {\r\n      var parts = this.basicData.labels[index].split(\" - \");\r\n      this.translateService.get(this.translateMonth[parts[0]] ? this.translateMonth[parts[0]] : parts[0]).subscribe(translation => {\r\n        this.basicData.labels[index] = translation + \" - \" + parts[1];\r\n    });\r\n    };\r\n  }\r\n\r\n  public async refreshData(startDate : string, endDate : string): Promise<void>{\r\n    this._currentId = this.activatedRoute.snapshot.params['id'];\r\n    if(this._currentId.includes('H')){\r\n      await this.meterService.getMetersByBuildingId(this._currentId).toPromise()\r\n      .then(response => {\r\n        this._meters = response;\r\n      });\r\n      await this.historiesCreator(this._meters, startDate, endDate)\r\n    }else{\r\n      await this.meterService.getMetersByWalletId(this._currentId).toPromise()\r\n      .then(response => {\r\n        this._meters = response;\r\n      });\r\n      await this.historiesCreator(this._meters, startDate, endDate)\r\n    }\r\n  }\r\n\r\n  public padTo2Digits(num: number) : string {\r\n    return num.toString().padStart(2, '0');\r\n  }\r\n\r\n  public formatDate(date: Date) : string {\r\n    return (\r\n      [\r\n        date.getFullYear(),\r\n        this.padTo2Digits(date.getMonth() + 1),\r\n        this.padTo2Digits(date.getDate()),\r\n      ].join('-')\r\n    );\r\n  }\r\n\r\n  public async historiesCreator(meters : Meter[], startDate : string, endDate : string): Promise<void>{\r\n    this._histories.clear();\r\n    this.chartTable = [];\r\n    for (let index = 0; index < meters.length; index++) {\r\n      await this.meterService.getMeterHistoryByMeterIdUsingDate(meters[index].id, startDate, endDate).toPromise()\r\n      .then(response =>{\r\n        this._histories.set(meters[index], response);\r\n      })\r\n    }\r\n  }\r\n\r\n  public async getLastSevenDay(): Promise<void>{\r\n    var startDate = new Date();\r\n    var endDate = new Date();\r\n    var dataIndex = 0;\r\n    startDate.setDate(startDate.getDate() - 7);\r\n\r\n    await this.refreshData(this.formatDate(startDate), this.formatDate(endDate));\r\n\r\n    for (let index = 0; index < 7; index++) {\r\n      startDate.setDate(startDate.getDate() + 1)\r\n      this.basicData.labels.push(this.formatDate(startDate))\r\n    }\r\n    \r\n    this._histories.forEach((value: MeterHistory[], key: Meter) => {\r\n\r\n      this.translateService.get(this.names[key.energyType.id]).subscribe(translation => {\r\n        this.initialiazeDatasetElement(translation, this.colors[key.energyType.id])\r\n      });\r\n\r\n      var array = [];\r\n      var valueData = 0;\r\n      this.basicData.labels.forEach(element=>{\r\n        value.forEach(history => {\r\n          if(history.date == element){\r\n            if(valueData <= history.value){\r\n              valueData = history.value;\r\n            }\r\n          }\r\n        });\r\n        this.addDataTableChart(element, key.energyType.id, valueData, key.id);\r\n        array.push(valueData);\r\n     });\r\n\r\n     this.basicData.datasets[dataIndex].data = array;\r\n     dataIndex++;\r\n    });\r\n  }\r\n\r\n  public async getByMonth(): Promise<void>{\r\n    var endDate = new Date();\r\n    var startDate = new Date();\r\n    var dataIndex = 0;\r\n\r\n    startDate.setFullYear(startDate.getFullYear() - 1);\r\n    \r\n    await this.refreshData(this.formatDate(startDate), this.formatDate(endDate));\r\n    \r\n    var currentDate = new Date(startDate);\r\n    while (currentDate <= endDate) {\r\n        var month = currentDate.toLocaleString('en', { month: 'long' }).toLocaleLowerCase();\r\n        var year = currentDate.getFullYear();\r\n        var label = month + ' - ' + year;\r\n        this.basicData.labels.push(label);\r\n    \r\n        // Move to the next month\r\n        currentDate.setMonth(currentDate.getMonth() + 1);\r\n    }\r\n    \r\n    this._histories.forEach((value: MeterHistory[], key: Meter) => {\r\n      this.translateService.get(this.names[key.energyType.id]).subscribe(translation => {\r\n        this.initialiazeDatasetElement(translation, this.colors[key.energyType.id])\r\n      })\r\n\r\n     var array = [];\r\n     var valueData = 0;\r\n     this.basicData.labels.forEach(element=>{\r\n      value.forEach(history => {\r\n        if((history.date.split(\"-\")[1] == this.month[element.split(\" - \")[0]]) && (history.date.split(\"-\")[0] == element.split(\" - \")[1])){\r\n          if(valueData <= history.value){\r\n            valueData = history.value;\r\n          }\r\n        }\r\n      });\r\n        this.addDataTableChart(element, key.energyType.id, valueData, key.id);\r\n        array.push(valueData);\r\n     });\r\n\r\n     this.basicData.datasets[dataIndex].data = array;\r\n     dataIndex++;\r\n    });\r\n    this.refreshLabelsMonth();\r\n  }\r\n\r\n  public async getByYear(): Promise<void>{\r\n    var startDate = new Date();\r\n    var endDate = new Date();\r\n    var dataIndex = 0;\r\n    \r\n    startDate.setFullYear(startDate.getFullYear() - 5);\r\n\r\n    await this.refreshData(this.formatDate(startDate), this.formatDate(endDate));\r\n\r\n    for (let index = 2019; index <= endDate.getFullYear(); index++) {\r\n      this.basicData.labels.push(index)\r\n    }\r\n    \r\n    this._histories.forEach((value: MeterHistory[], key: Meter) => {\r\n      this.translateService.get(this.names[key.energyType.id]).subscribe(translation => {\r\n        this.initialiazeDatasetElement(translation, this.colors[key.energyType.id])\r\n      })\r\n\r\n\r\n     var array = [];\r\n     var valueData = 0;\r\n     this.basicData.labels.forEach(element=>{\r\n      value.forEach(history => {\r\n\r\n        if(history.date.split(\"-\")[0] == element){\r\n          if(valueData <= history.value){\r\n            valueData = history.value;\r\n          }\r\n        }\r\n      });\r\n        if(valueData > 0)\r\n          this.addDataTableChart(element, key.energyType.id, valueData, key.id);\r\n        array.push(valueData);\r\n     });\r\n\r\n     this.basicData.datasets[dataIndex].data = array;\r\n     dataIndex++;\r\n    });\r\n  }\r\n\r\n  public async showSeven(): Promise<void>{\r\n    this._hasMonth = false;\r\n    this.isLoad = false;\r\n    this.basicData = {\r\n      labels: [],\r\n      datasets: []\r\n    };\r\n    await this.getLastSevenDay();\r\n    this.isLoad = true;\r\n  }\r\n\r\n  public async showMonth(): Promise<void>{\r\n    this._hasMonth = true;\r\n    this.isLoad = false;\r\n    this.basicData = {\r\n      labels: [],\r\n      datasets: []\r\n    };\r\n    await this.getByMonth();\r\n    this.isLoad = true;\r\n  }\r\n\r\n  public async showYear(): Promise<void>{\r\n    this._hasMonth = false;\r\n    this.isLoad = false;\r\n    this.basicData = {\r\n      labels: [],\r\n      datasets: []\r\n    };\r\n    await this.getByYear();\r\n    this.isLoad = true;\r\n  }\r\n\r\n  public addDataTableChart(date:string, energyType:number, value:number, meterId: string): void{\r\n    this.chartTable.push(\r\n      {\r\n        date: date,\r\n        energyType: this.names[energyType], \r\n        value: value,\r\n        meterId: meterId\r\n      });\r\n  }\r\n\r\n  public exportJSON(chartTable: ChartTable[]): void{\r\n    const data = chartTable;\r\n    const fileName = \"data\";\r\n    const exportType =  exportFromJSON.types.json;\r\n    exportFromJSON({data, fileName, exportType})\r\n  }\r\n\r\n  public exportXML(chartTable: ChartTable[]): void{\r\n    const data = chartTable;\r\n    const fileName = 'data';\r\n    const exportType =  exportFromJSON.types.xml;\r\n    exportFromJSON({data, fileName, exportType});\r\n  }\r\n\r\n  public initialiazeDatasetElement(translation:string, color:string): void{\r\n    this.basicData.datasets.push({\r\n      label: translation,\r\n      borderColor: color,\r\n      backgroundColor: color,\r\n      tension: 0.4,\r\n      data : []\r\n   });\r\n  }\r\n}\r\n","<div  class = \"view\">\r\n    <p-toolbar class=\"toolbar\" styleClass=\"mb-4 gap-2\" *ngIf=\"isLoad\">\r\n        <ng-template pTemplate=\"right\" class=\"right-side-toolbar\">\r\n            <button  pButton  (click) = \"showSeven()\" icon=\"pi pi-info-circle\" class=\"p-button-sm button purple-button\" label = \"{{ 'show7' | translate }}\"></button>\r\n            <button  pButton  (click) = \"showMonth()\" icon=\"pi pi-info-circle\" class=\"p-button-sm button purple-button\" label = \"{{ 'showMonth' | translate }}\"></button>\r\n            <button  pButton  (click) = \"showYear()\" icon=\"pi pi-info-circle\" class=\"p-button-sm button purple-button\" label = \"{{ 'showYear' | translate }}\"></button>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"left\" class=\"left-side-toolbar\">\r\n            <p-slideMenu [showTransitionOptions]=\"'5ms'\" [hideTransitionOptions]=\"'0ms'\" #menu [model]=\"items\" [popup]=\"true\"></p-slideMenu>\r\n            <button #btn  type=\"button\" pButton label=\"{{ 'exportfile' | translate }}\" icon=\"pi pi-file-export\" class=\"p-button-sm button purple-button\" (click)=\"menu.toggle($event)\"></button>\r\n            <p-toggleButton class=\"purple-togglebutton\" onLabel=\"{{ 'showtable' | translate }}\" offLabel=\"{{ 'showchart' | translate }}\"  offIcon = \"pi pi-chart-pie\" onIcon = \"pi pi-table\" styleClass = \"p-button-sm button\" [(ngModel)]=\"checked\"></p-toggleButton>\r\n        </ng-template>\r\n    </p-toolbar>\r\n    \r\n    <section class = \"card table-container\">\r\n        <ng-container *ngIf=\"isLoad else loading\">\r\n            <section class = \"element-section\">\r\n                <section *ngIf= \"checked\" class=\"chart-section\">\r\n                    <p-chart class = \"chart\" type=\"line\" #myChart [data]=\"basicData\" [options]=\"basicOptions\"></p-chart>\r\n                </section>\r\n                \r\n                <section *ngIf= \"!checked\" class=\"table-section\">\r\n                    <app-dynamic-table \r\n                        [collection] = \"chartTable\" \r\n                        [cols] = \"cols\" \r\n                        [isEditable] = false\r\n                        [isDeletable] = false\r\n                        [isLoading]= \"!isLoad\">\r\n                    </app-dynamic-table>\r\n                </section>\r\n            </section>\r\n        </ng-container>\r\n        \r\n        <ng-template #loading class = \"card\">\r\n        <div aria-label=\"Orange and tan hamster running in a metal wheel\" role=\"img\" class=\"wheel-and-hamster center-hamster\">\r\n            <div class=\"wheel\"></div>\r\n            <div class=\"hamster\">\r\n                <div class=\"hamster__body\">\r\n                    <div class=\"hamster__head\">\r\n                        <div class=\"hamster__ear\"></div>\r\n                        <div class=\"hamster__eye\"></div>\r\n                        <div class=\"hamster__nose\"></div>\r\n                    </div>\r\n                    <div class=\"hamster__limb hamster__limb--fr\"></div>\r\n                    <div class=\"hamster__limb hamster__limb--fl\"></div>\r\n                    <div class=\"hamster__limb hamster__limb--br\"></div>\r\n                    <div class=\"hamster__limb hamster__limb--bl\"></div>\r\n                    <div class=\"hamster__tail\"></div>\r\n                </div>\r\n            </div>\r\n            <div class=\"spoke\">\r\n            </div>\r\n            <h2>Loading....</h2>  \r\n        </div>\r\n    </ng-template>\r\n    </section>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n//models\r\nimport { Building } from 'src/app/core/models/datamodels/Building';\r\nimport { Contract } from 'src/app/core/models/datamodels/Contract';\r\nimport { ContractType } from 'src/app/core/models/datamodels/ContractType';\r\nimport { Customer } from 'src/app/core/models/datamodels/Customer';\r\nimport { EnergyType } from 'src/app/core/models/datamodels/EnergyType';\r\n\r\n//components\r\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\r\n\r\n//services\r\nimport { BuildingService } from 'src/app/core/services/building.service';\r\nimport { ContractService } from 'src/app/core/services/contract.service';\r\nimport { CustomerService } from 'src/app/core/services/customer.service';\r\nimport { LocalService } from 'src/app/core/services/local.service';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-contract-form',\r\n  templateUrl: './contract-form.component.html',\r\n  styleUrls: ['./contract-form.component.scss'],\r\n  providers: [ConfirmationService]\r\n})\r\n\r\nexport class ContractFormComponent implements OnInit {\r\n  \r\n  //current contract\r\n  private _contract: Contract;\r\n\r\n  private _customer: any;\r\n\r\n  private _newContract:Contract;\r\n\r\n  public selectedMinDate: Date;\r\n  public selectedMaxDate: Date;\r\n\r\n  //Form\r\n  public contractForm: FormGroup;\r\n  public customerForm: FormGroup;\r\n  public modeForm: \"create\" | \"edit\";\r\n\r\n  //dropdown\r\n  public energies: EnergyType[] = [];\r\n  public selectedErnegies: EnergyType[];\r\n\r\n  public contractTypes: ContractType[];\r\n  public selectedContractType: ContractType;\r\n\r\n  //Dropdown\r\n  public buildings: Building[];\r\n  public selectedEnergy: Building;\r\n\r\n  //timer\r\n  public timer: any;\r\n\r\n  constructor(\r\n    private readonly contractService: ContractService, \r\n    private readonly customerService: CustomerService, \r\n    public fb: FormBuilder, public ref: DynamicDialogRef, \r\n    public config: DynamicDialogConfig, \r\n    private translateService: TranslateService,\r\n    private confirmationService: ConfirmationService,\r\n    private buildingService: BuildingService,\r\n    private readonly localStorage: LocalService) {}\r\n\r\n  async ngOnInit() {\r\n    this.initForm();\r\n\r\n    await this.contractService.getAllContractTypes().toPromise().then((contractTypes: ContractType[]) => {\r\n      this.contractTypes = contractTypes;\r\n    });\r\n\r\n    await this.contractService.getEnergyTypeByProviderId(this.localStorage.getData('id')).toPromise().then((energyTypes: EnergyType[]) => {\r\n      this.energies = energyTypes;\r\n      for (let index = 0; index < this.energies.length; index++) {\r\n        this.translateService.get(this.energies[index].value).subscribe(translation => {\r\n          this.energies[index].value = translation;\r\n        })\r\n      }\r\n    });\r\n\r\n    if(this.modeForm == \"edit\"){\r\n      await this.loadCustomer(this._contract.customerId);\r\n    }\r\n    \r\n  }\r\n\r\n  private async initForm() {\r\n    this.customerForm = this.fb.group({\r\n      id: [null],\r\n      name: [''],\r\n      surname: [''],\r\n      building: [null, Validators.required]\r\n    });\r\n\r\n    this.contractForm = this.fb.group({\r\n      id: [null],\r\n      startDate: ['', Validators.required],\r\n      endDate: ['', Validators.required],\r\n      contractType: [null, Validators.required],\r\n    });  \r\n    \r\n    if(this.config.data){\r\n      this.modeForm = \"edit\";\r\n      this._contract = this.config.data;\r\n      await this.loadCustomerBuilding(this._contract.customerId);\r\n      this.updateContractForm();\r\n    }else{\r\n      this.modeForm = \"create\";\r\n    }\r\n    \r\n  }\r\n\r\n  public async loadCustomerBuilding(customerId: string){\r\n    await this.buildingService.getBuildingByCustomerId(customerId, 0, 50).toPromise().then((buildings: Building[]) => {\r\n      this.buildings = buildings;\r\n      this.buildings.forEach(element =>{\r\n        element.fullAdress = (element.buildingName? \"\" : element.buildingName) + `${element.street} ${element.number}, ${element.zipCode} ${element.city}` \r\n      })\r\n    });\r\n  }\r\n\r\n  public async loadCustomer(customerId:string){\r\n    await this.customerService.getCustomerById(customerId).toPromise().then((customer: Customer) => {\r\n      this._customer = customer;\r\n      this.customerForm.patchValue(this._customer);\r\n    });\r\n  }\r\n\r\n  public cancelDialog(): void{\r\n    this.translateService.get(\"cancelMessage\").subscribe(translation => {\r\n      this.confirmationService.confirm({\r\n        message: translation,\r\n        key: 'cancelDialog',\r\n        accept: () => {\r\n          this.ref.close();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public saveDialog(): void{\r\n    this.translateService.get(\"saveMessage\").subscribe(translation => {\r\n      this.confirmationService.confirm({\r\n        message: translation,\r\n        key: 'saveDialog',\r\n        accept: () => {\r\n          this._contract = this.contractForm.value;\r\n          this._customer = this.customerForm.value;\r\n          this._newContract = new Contract(\r\n            this._contract.id, \r\n            this._contract.startDate, \r\n            this._contract.endDate, \r\n            this.localStorage.getData(\"id\"), \r\n            this._contract.contractType, \r\n            this._customer.building.id, \r\n            this._customer.id\r\n            );\r\n          this.ref.close(this._newContract);\r\n        }\r\n      });  \r\n    });\r\n  }\r\n\r\n  private updateContractForm(): void {\r\n    this.contractForm.patchValue(this._contract);\r\n    if(this.modeForm === \"edit\"){\r\n      this.buildings.forEach(element => {\r\n        if(element.id == this._contract.buildingId){\r\n          this.customerForm.get(\"building\").patchValue(element);\r\n        }\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n  public isReadOnly():boolean{\r\n    return this.modeForm == \"edit\";\r\n  }\r\n\r\n  public onSearch(): void{\r\n    this.loadCustomerBuilding(this.customerForm.get(\"id\").value);\r\n    this.loadCustomer(this.customerForm.get(\"id\").value);\r\n  }\r\n\r\n  public onClean(): void{\r\n    this.customerForm.get(\"id\").patchValue(null);\r\n    this.customerForm.get(\"name\").patchValue('');\r\n    this.customerForm.get(\"surname\").patchValue('');\r\n    this.customerForm.get(\"building\").patchValue(null);\r\n  }\r\n}\r\n","<div  class=\"contract-form-container dialog-component\">\r\n    <section class=\"form-section\">\r\n\r\n        <h4 >{{ \"contractinfo\" | translate }}</h4>\r\n        <form [formGroup]=\"contractForm\" class=\"contract-form grid-form\">\r\n            <label class=\"label\" >{{ \"startdate\" | translate }}<span>*</span></label>\r\n            <p-calendar class=\"field form-calendar purple-calendar\" formControlName=\"startDate\" dateFormat=\"yy-mm-dd\" dataType=\"string\" [showIcon]=\"true\"></p-calendar>\r\n                   \r\n            <label class=\"label\" >{{ \"enddate\" | translate }}<span>*</span></label>\r\n            <p-calendar class=\"field form-calendar purple-calendar\" formControlName=\"endDate\" dateFormat=\"yy-mm-dd\" dataType=\"string\" [showIcon]=\"true\"></p-calendar>\r\n                                 \r\n            <label class=\"label\" >{{ \"contracttype\" | translate }}<span>*</span></label>\r\n            <p-dropdown appendTo=\"body\" class=\"field form-dropdown purple-dropdown\"  formControlName=\"contractType\" [options]=\"contractTypes\" optionLabel=\"value\" placeholder='{{ \"selectcontract\" | translate }}' [showClear]=\"true\"></p-dropdown>\r\n    \r\n        </form>\r\n\r\n        <h4 >{{ \"contractorinfo\" | translate }}</h4>\r\n        <form [formGroup]=\"customerForm\" class=\"contractor-infos grid-form\"> \r\n            <label class=\"label\" >ID</label>\r\n            <div class=\"p-inputgroup\">\r\n                <input class=\"field purple-input\" formControlName=\"id\" type=\"text\" pInputText [readonly] = \"isReadOnly()\"/>\r\n                <button type=\"button\" pButton icon=\"pi pi-trash\" class = \"purple-button\" styleClass=\"p-button-warn\" (click) = \"onClean()\" *ngIf=\"!isReadOnly()\"></button>\r\n                <button type=\"button\" pButton icon=\"pi pi-search\" class = \"purple-button\" styleClass=\"p-button-warn\" (click) = \"onSearch()\" *ngIf=\"!isReadOnly()\"></button>    \r\n            </div>\r\n            \r\n            <label class=\"label\" >{{ \"name\" | translate }}</label>\r\n            <input class=\"field purple-input\" formControlName=\"name\" type=\"text\" pInputText [readonly] = \"true\"/>\r\n                   \r\n            <label class=\"label\" >{{ \"surname\" | translate }}</label>\r\n            <input class=\"field purple-input\" formControlName=\"surname\" type=\"text\" pInputText [readonly] = \"true\"/>\r\n                    \r\n            <label class=\"label\" >{{ \"building\" | translate }}</label>\r\n            <p-dropdown appendTo=\"body\" class=\"field form-dropdown purple-dropdown\"  formControlName=\"building\" [options]=\"buildings\" optionLabel=\"fullAdress\" placeholder='{{ \"selectbuilding\" | translate }}' [showClear]=\"true\"></p-dropdown>    \r\n        </form>\r\n    </section>\r\n    <section class=\"form-required\">\r\n        <div>required*</div>\r\n    </section>\r\n    <section class=\"form-validation\">\r\n        <app-form-status [validity]= \"contractForm.valid && customerForm.valid\" ></app-form-status>\r\n    </section>\r\n    <div>\r\n        <button  pButton label='{{ \"cancel\" | translate }}' icon=\"pi pi-times\" class=\"p-button-text purple-button-text\" (click)=\"cancelDialog()\"></button>\r\n        <button [disabled]=\"!contractForm.valid\"  pButton label='{{ \"save\" | translate }}' icon=\"pi pi-check\" class=\"p-button-text purple-button-text\" (click)=\"saveDialog()\"></button>\r\n    </div>\r\n    <!--Dialogs-->\r\n    <p-confirmDialog class=\"purple-confirmdialog\" key=\"cancelDialog\" header=\"Cancel operation?\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n    <p-confirmDialog class=\"purple-confirmdialog\" key=\"saveDialog\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n//models\r\nimport { PaginationParams } from 'src/app/core/models/utility/PaginationParams';\r\nimport { Contract } from 'src/app/core/models/datamodels/Contract';\r\nimport { DynamicColumn } from 'src/app/core/models/utility/DynamicColumn';\r\nimport { IFormable } from 'src/app/core/models/utility/IFormable';\r\nimport { IRefreashable } from 'src/app/core/models/utility/IRefreshable';\r\n\r\n//components\r\nimport { ContractFormComponent } from './contract-form/contract-form.component';\r\n\r\n//services\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LocalService } from 'src/app/core/services/local.service';\r\nimport { ContractService } from 'src/app/core/services/contract.service';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\n\r\n@Component({\r\n  selector: 'app-contract-view',\r\n  templateUrl: './contract-view.component.html',\r\n  styleUrls: ['./contract-view.component.scss'],\r\n  providers: [DialogService]\r\n})\r\n\r\nexport class ContractViewComponent implements OnInit, IRefreashable, IFormable {\r\n\r\n  public contracts: Contract[];\r\n\r\n  public contractsCounter: number;\r\n\r\n  public selectedContract: Contract;\r\n\r\n  public cols: DynamicColumn[];\r\n  \r\n  public formHeader: string;\r\n\r\n  public isLoading: boolean = false; \r\n\r\n  private roles: string[];\r\n\r\n  public paginationParams: PaginationParams;\r\n\r\n  constructor(\r\n    private readonly router: Router,\r\n    private readonly contractService: ContractService, \r\n    public dialogService: DialogService, \r\n    private translateService: TranslateService,\r\n    private localStorage: LocalService) {}\r\n  \r\n  ngOnInit(): void {\r\n    this.roles = JSON.parse(localStorage.getItem('roles'));\r\n    this.paginationParams = {\r\n      first: 0,\r\n      rowsNumber: 5\r\n    };\r\n    this.cols = [\r\n      {field: 'startDate', header: 'startdate'},\r\n      {field: 'endDate', header: 'enddate'},\r\n      {field: 'providerName', header: 'provider'},\r\n      {field: 'contractType.value', header: 'contracttype'},\r\n      {field: 'buildingAdress', header: 'buildingadress'},\r\n    ];\r\n    this.refreshData();\r\n  }\r\n\r\n  public createFormDialog(): void {\r\n    this.translateService.get(\"contractform\").subscribe(translation => {\r\n      const ref = this.dialogService.open(ContractFormComponent,\r\n        {\r\n          header: translation,\r\n          draggable: true,\r\n          resizable: true,\r\n          maximizable: true\r\n        });\r\n\r\n        ref.onClose.subscribe((contract: Contract) => {\r\n          if(contract){\r\n            this.contractService.createContract(contract).subscribe(() =>{\r\n              this.refreshData();\r\n            });\r\n          }\r\n        });\r\n    })\r\n  }\r\n  \r\n  public editFormDialog(data: any): void {\r\n    this.translateService.get(\"contractform\").subscribe(translation => {\r\n      const ref = this.dialogService.open(ContractFormComponent,\r\n        {\r\n          header: translation,\r\n          data: data,\r\n          draggable: true,\r\n          resizable: true,\r\n          maximizable: true\r\n        });\r\n\r\n        ref.onClose.subscribe((contract: Contract) => {\r\n          if(contract){\r\n            this.contractService.updateContract(contract).subscribe(() =>{\r\n              this.refreshData();\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  public onShowContractPricesClick(): void{\r\n    this.router.navigateByUrl(`/manager/contract/${this.selectedContract.id}/prices`);\r\n  }\r\n\r\n  public onContractSelected(contract: Contract): void{\r\n    this.selectedContract = contract;\r\n  }\r\n\r\n  public updatePaginationParams(params: PaginationParams): void{\r\n    this.paginationParams = params;\r\n    this.refreshData();\r\n  }\r\n\r\n  public refreshData(): void {\r\n    this.isLoading = true;\r\n    this.roles.includes(\"ADMIN\") ? this.loadProviderContracts() : this.loadCustomerContracts();\r\n  }\r\n\r\n  private async loadCustomerContracts(): Promise<void>{\r\n    await this.contractService.countContractByCustomerId(this.localStorage.getData('id')).toPromise().then((contractsCounter: number) => {\r\n      this.contractsCounter = contractsCounter;\r\n    });\r\n    await this.contractService.getContractsByCustomerId(\r\n      this.localStorage.getData('id'), \r\n      this.paginationParams.first, \r\n      this.paginationParams.rowsNumber).toPromise().then((contracts: Contract[]) => {\r\n        this.contracts = contracts;\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  private async loadProviderContracts(): Promise<void>{\r\n    await this.contractService.countContractByProviderId(this.localStorage.getData('id')).toPromise().then((contractsCounter: number) => {\r\n      this.contractsCounter = contractsCounter;\r\n    });\r\n    await this.contractService.getContractsByProviderId(\r\n      this.localStorage.getData('id'), \r\n      this.paginationParams.first, \r\n      this.paginationParams.rowsNumber).toPromise().then((contracts: Contract[]) => {\r\n        this.contracts = contracts;\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  public isAdmin(): boolean{\r\n    return JSON.parse(this.localStorage.getData(\"roles\")).includes(\"ADMIN\");\r\n  }\r\n}\r\n","<div  class=\"contract-view view\">\r\n    <section class=\"header-view\">\r\n        \r\n    </section>\r\n    <section class=\"table-toolbar\">\r\n        <p-toolbar class=\"toolbar\" styleClass=\"mb-4 gap-2\">\r\n            <ng-template pTemplate=\"left\" class=\"left-side-toolbar\" *ngIf=\"isAdmin()\">\r\n                <button   pButton (click)=\"createFormDialog()\" label='{{ \"new\" | translate }}' icon=\"pi pi-plus\" class=\"p-button-sm mr-2 purple-button\"></button>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"right\" class=\"right-side-toolbar\">\r\n                <button  pButton [disabled]=\"selectedContract == null\" (click)=\"onShowContractPricesClick()\" label='{{ \"showcontractprices\" | translate }}' icon=\"pi pi-history\" class=\"mr-2 p-button-sm purple-button\"></button>\r\n            </ng-template>\r\n        </p-toolbar>\r\n    </section>\r\n    <section class=\"table-container\">\r\n        <app-dynamic-table \r\n            [collection]=\"contracts\" \r\n            [totalRecords]=\"contractsCounter\"\r\n            [cols]=\"cols\" \r\n            [isLoading]=\"isLoading\"\r\n            [isEditable] = \"isAdmin()\"\r\n            [isDeletable] = \"false\"\r\n            [isPaginable]=\"true\"\r\n            (onEdit)=\"editFormDialog($event)\"\r\n            (onPageChange)=\"updatePaginationParams($event)\"\r\n            (onSelect)=\"onContractSelected($event)\"></app-dynamic-table>       \r\n    </section>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n//models\r\nimport { EnergyType } from 'src/app/core/models/datamodels/EnergyType';\r\nimport { ContractEnergyType } from 'src/app/core/models/datamodels/ContractEnergyType';\r\n\r\n//components\r\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\r\n\r\n//services\r\nimport { ContractService } from 'src/app/core/services/contract.service';\r\nimport { LocalService } from 'src/app/core/services/local.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ConfirmationService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-price-form',\r\n  templateUrl: './price-form.component.html',\r\n  styleUrls: ['./price-form.component.scss'],\r\n  providers: [ConfirmationService]\r\n})\r\n\r\nexport class PriceFormComponent implements OnInit {\r\n  \r\n  //Current contractEnergyType\r\n  private _contractEnergyType: ContractEnergyType;\r\n\r\n  //Form\r\n  public priceForm: FormGroup;\r\n\r\n  public modeForm: \"create\" | \"edit\";\r\n\r\n  public energies: EnergyType[];\r\n\r\n  public selectedEnergy: EnergyType;\r\n\r\n  constructor(\r\n    private fb: FormBuilder, \r\n    public ref: DynamicDialogRef, \r\n    public config: DynamicDialogConfig, \r\n    private translateService: TranslateService,\r\n    private confirmationService: ConfirmationService,\r\n    private contractService: ContractService,\r\n    private localStorage: LocalService){}\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n\r\n    this.contractService.getEnergyTypeByProviderId(this.localStorage.getData('id')).subscribe((energies: EnergyType[]) =>{\r\n      this.energies = energies;\r\n      for (let index = 0; index < this.energies.length; index++) {\r\n        this.translateService.get(this.energies[index].value).subscribe( translation => {\r\n          this.energies[index].value = translation;\r\n        })\r\n      };  \r\n    });\r\n  }\r\n\r\n  private initForm(): void {\r\n    this.priceForm = this.fb.group({\r\n      id: [null],\r\n      dayPrice: [0.0, Validators.required],\r\n      nightPrice: [0.0, Validators.required],\r\n      energyType: [null, Validators.required]\r\n    });\r\n\r\n    if(this.config.data){\r\n      this.modeForm = \"edit\";\r\n      this._contractEnergyType = this.config.data;\r\n      this.updateForm();\r\n    }else{\r\n      this.modeForm = \"create\";\r\n    }\r\n  }\r\n\r\n  public cancelDialog(): void{\r\n    this.translateService.get(\"cancelMessage\").subscribe(translation => {\r\n      this.confirmationService.confirm({\r\n        message: translation,\r\n        key: 'cancelDialog',\r\n        accept: () => {\r\n          this.ref.close();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public saveDialog(): void{\r\n    this.translateService.get(\"saveMessage\").subscribe( translation => {\r\n      this.confirmationService.confirm({\r\n        message: translation,\r\n        key: 'saveDialog',\r\n        accept: () => {\r\n          this._contractEnergyType = this.priceForm.value;\r\n          if(this.modeForm == \"create\"){\r\n            this._contractEnergyType.energyTypeId = this._contractEnergyType.energyType as unknown as number;\r\n            delete this._contractEnergyType.energyType;\r\n          }\r\n          this.ref.close(this._contractEnergyType);\r\n        }\r\n      }); \r\n    });\r\n  }\r\n\r\n  private updateForm() {\r\n    this.priceForm.patchValue(this._contractEnergyType);\r\n    if(this.modeForm === \"edit\"){\r\n      this.priceForm.get(\"energyType\").patchValue(this._contractEnergyType.energyTypeId);\r\n      this.priceForm.get(\"energyType\").disable();\r\n    }\r\n  }\r\n}\r\n","<div  class=\"dialog-component\">\r\n    <section class=\"form-section\">\r\n        <form class=\"grid-form\" [formGroup]=\"priceForm\">\r\n        \r\n            <label class=\"label\" >{{ \"dayprice\" | translate }}<span>*</span></label>\r\n            <p-inputNumber class=\"field form-inputNumber purple-inputnumber\" formControlName=\"dayPrice\" [min]=\"0\" type=\"text\"></p-inputNumber>\r\n    \r\n            <label class=\"label\" >{{ \"nightprice\" | translate }}<span>*</span></label>\r\n            <p-inputNumber class=\"field form-inputNumber purple-inputnumber\" formControlName=\"nightPrice\" [min]=\"0\" type=\"text\"></p-inputNumber>\r\n                \r\n            <label class=\"label\" >{{ \"energytype\" | translate }}<span>*</span></label>\r\n            <p-dropdown appendTo=\"body\" class=\"field form-dropdown purple-dropdown\" formControlName=\"energyType\" [options]=\"energies\" optionLabel=\"value\" optionValue=\"id\" placeholder = '{{ \"selectenergy\" | translate }}' [showClear]=\"true\"></p-dropdown>\r\n        \r\n        </form>\r\n    </section>\r\n    <section class=\"form-required\">\r\n        <div>required*</div>\r\n    </section>\r\n    <app-form-status [validity]= \"priceForm.valid\" ></app-form-status>\r\n    <div>\r\n        <button  pButton label='{{ \"cancel\" | translate }}' icon=\"pi pi-times\" class=\"p-button-text purple-button-text\" (click)=\"cancelDialog()\"></button>\r\n        <button [disabled]=\"!priceForm.valid\"  pButton label='{{ \"save\" | translate }}' icon=\"pi pi-check\" class=\"p-button-text purple-button-text\" (click)=\"saveDialog()\"></button>\r\n    </div>\r\n    <!--Dialogs-->\r\n    <p-confirmDialog class=\"purple-confirmdialog\" key=\"cancelDialog\" header=\"Cancel operation?\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n    <p-confirmDialog class=\"purple-confirmdialog\" key=\"saveDialog\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { RouteHistoryService } from 'src/app/core/directives/route-history.service';\r\n\r\n//models\r\nimport { EnergyType } from 'src/app/core/models/datamodels/EnergyType';\r\nimport { ContractEnergyType } from 'src/app/core/models/datamodels/ContractEnergyType';\r\nimport { IFormable } from 'src/app/core/models/utility/IFormable';\r\nimport { IRefreashable } from 'src/app/core/models/utility/IRefreshable';\r\n\r\n//components\r\nimport { PriceFormComponent } from './price-form/price-form.component';\r\nimport { DynamicColumn } from 'src/app/core/models/utility/DynamicColumn';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\n\r\n//services\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LocalService } from 'src/app/core/services/local.service';\r\nimport { ContractService } from 'src/app/core/services/contract.service';\r\n\r\n@Component({\r\n  selector: 'app-price-view',\r\n  templateUrl: './price-view.component.html',\r\n  styleUrls: ['./price-view.component.scss']\r\n})\r\n\r\nexport class PriceViewComponent implements OnInit, IRefreashable, IFormable{\r\n\r\n  public energiesPrices: ContractEnergyType[];\r\n\r\n  public cols: DynamicColumn[];\r\n\r\n  public currentContractId: string;\r\n\r\n  public selectedContractEnergy: ContractEnergyType;\r\n\r\n  public formHeader: string;\r\n\r\n  public isLoading: boolean = false; \r\n  \r\n  constructor(\r\n    private router: Router,\r\n    private readonly activatedRoute: ActivatedRoute, \r\n    private readonly contractService: ContractService,  \r\n    public dialogService: DialogService,\r\n    private routeHistory: RouteHistoryService,\r\n    private translateService: TranslateService,\r\n    private localStorage: LocalService){}\r\n\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'energyType', header: 'energy'},\r\n      {field: 'dayPrice', header: 'dayprice'},\r\n      {field: 'nightPrice', header: 'nightprice'}     \r\n    ];\r\n    this.refreshData();\r\n  }\r\n\r\n  public async refreshData(): Promise<void>{\r\n    this.currentContractId = this.activatedRoute.snapshot.params['contractId'];\r\n    this.isLoading = true;\r\n\r\n    //convert id of energy type to energy type name\r\n    let map = new Map<number, string>;\r\n    await this.contractService.getAllEnergyTypes().toPromise().then((energyTypes: EnergyType[]) => {\r\n      energyTypes.forEach((e) =>{\r\n        map.set(e.id, e.value);\r\n      });\r\n    });\r\n    await this.contractService.getContractEnergyTypeByContractId(this.currentContractId).toPromise().then((contractEnergyType: ContractEnergyType[]) => {\r\n      contractEnergyType.forEach((ce)=>{\r\n        ce.energyType = map.get(ce.energyTypeId);\r\n      });\r\n      this.energiesPrices = contractEnergyType;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n  \r\n  public createFormDialog(): void{\r\n    this.translateService.get(\"priceform\").subscribe( translation => {\r\n      const ref = this.dialogService.open(PriceFormComponent,\r\n        {\r\n          header: translation,\r\n          draggable: true,\r\n          resizable: true,\r\n          maximizable: true\r\n        });\r\n        ref.onClose.subscribe((contractEnergyType: ContractEnergyType) => {\r\n          if(contractEnergyType){\r\n            this.contractService.createContractEnergyType(contractEnergyType, this.currentContractId).subscribe(() => {\r\n              this.refreshData();\r\n            });        \r\n          } \r\n        });\r\n    });\r\n  }\r\n\r\n  public editFormDialog(data: any): void{\r\n    this.translateService.get(\"meterform\").subscribe(translation => {\r\n      const ref = this.dialogService.open(PriceFormComponent,\r\n        {\r\n          header: translation,\r\n          data: data,\r\n          draggable: true,\r\n          resizable: true,\r\n          maximizable: true\r\n        });\r\n        ref.onClose.subscribe((contractEnergyType: ContractEnergyType) => {\r\n          if(contractEnergyType){\r\n            this.contractService.updateContractEnergyType(contractEnergyType).subscribe(() => {\r\n              this.refreshData();\r\n            });     \r\n          } \r\n        });\r\n    });      \r\n  }\r\n\r\n  public deletePrice(id: any): void{\r\n    this.contractService.deleteContractEnergyTypeById(id).subscribe(() => {\r\n      this.refreshData();\r\n    })\r\n  }\r\n\r\n  public onPriceSelected(energy: ContractEnergyType): void{\r\n    this.selectedContractEnergy = energy;\r\n  }\r\n\r\n  public onPreviousClick(): void{\r\n    this.routeHistory.back();\r\n  }\r\n\r\n  public isAdmin(): boolean{\r\n    return JSON.parse(this.localStorage.getData(\"roles\")).includes(\"ADMIN\");\r\n  }\r\n\r\n}\r\n","<div  class=\"price-view view\">\r\n    <section class=\"header-view\">\r\n\r\n    </section>\r\n    <section class=\"table-toolbar\">\r\n        <p-toolbar class=\"toolbar\" styleClass=\"mb-4 gap-2\">\r\n            <ng-template pTemplate=\"left\" class=\"left-side-toolbar\">\r\n                <div class=\"router-actions rv-separator\">\r\n                    <button  (click)=\"onPreviousClick()\" pButton label='{{ \"previous\" | translate }}' icon=\"pi pi-chevron-left\" class=\"p-button-sm p-button-secondary\"></button>    \r\n                </div>\r\n                <div class=\"table-actions\" *ngIf=\"isAdmin()\">\r\n                    <button  pButton (click)=\"createFormDialog()\" label='{{ \"new\" | translate }}' icon=\"pi pi-plus\" class=\"mr-2 p-button-sm purple-button\"></button> \r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"right\" class=\"right-side-toolbar\">\r\n                \r\n            </ng-template>\r\n        </p-toolbar>\r\n    </section>\r\n    <section class=\"table-container\">\r\n        <app-dynamic-table \r\n            [collection]= \"energiesPrices\" \r\n            [cols]= \"cols\" \r\n            [isEditable] = \"isAdmin()\"\r\n            [isDeletable] = \"isAdmin()\"\r\n            [isLoading]=\"isLoading\"\r\n            (onEdit)=\"editFormDialog($event)\" \r\n            (onDelete)=\"deletePrice($event)\" \r\n            (onSelect)=\"onPriceSelected($event)\">\r\n        </app-dynamic-table>\r\n    </section>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n//models\r\nimport { Customer } from 'src/app/core/models/datamodels/Customer';\r\n\r\n//components\r\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\r\n\r\n//services\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ConfirmationService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-customer-form',\r\n  templateUrl: './customer-form.component.html',\r\n  styleUrls: ['./customer-form.component.scss'],\r\n  providers: [ConfirmationService]\r\n})\r\n\r\nexport class CustomerFormComponent implements OnInit {\r\n\r\n  private _customer: Customer;\r\n\r\n  public customerForm: FormGroup;\r\n\r\n  public modeForm: \"create\" | \"edit\";\r\n\r\n  constructor(\r\n    private fb: FormBuilder, \r\n    public ref: DynamicDialogRef, \r\n    public config: DynamicDialogConfig,\r\n    private confirmationService: ConfirmationService,\r\n    private translateService: TranslateService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n\r\n    //display in console values when changed \r\n    //this.customerForm.valueChanges.subscribe(console.log);\r\n  }\r\n\r\n  private initForm(): void {\r\n    this.customerForm = this.fb.group({\r\n      id: [null],\r\n      name: ['', Validators.required],\r\n      surname: ['', Validators.required],\r\n      phoneNumber: [''],\r\n      email: ['', Validators.required],\r\n      language:  [1, Validators.required]\r\n    });\r\n\r\n    if(this.config.data){\r\n      this.modeForm = \"edit\";\r\n      this._customer = this.config.data;  \r\n      this.updateForm();     \r\n    }else{\r\n      this.modeForm = \"create\";      \r\n    }\r\n  }\r\n\r\n  public cancelDialog(): void{\r\n    this.translateService.get(\"cancelMessage\").subscribe(translation => {\r\n      this.confirmationService.confirm({\r\n        message: translation,\r\n        key: 'cancelDialog',\r\n        accept: () => {\r\n          this.ref.close();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public saveDialog(): void{\r\n    this.translateService.get(\"saveMessage\").subscribe(translation => {\r\n      this.confirmationService.confirm({\r\n        message: translation,\r\n        key: 'saveDialog',\r\n        accept: () => {\r\n          this._customer = this.customerForm.value;\r\n          this._customer.phoneNumber = \"0\"+this.customerForm.value.phoneNumber;\r\n          this.ref.close(this._customer);\r\n        }\r\n      });  \r\n    });\r\n  }\r\n\r\n  private updateForm(): void {\r\n    this.customerForm.patchValue(this._customer);\r\n  }\r\n}\r\n","<div  class=\"customer-form-container dialog-component\">\r\n    <section class=\"form-section\">\r\n        <form class=\"grid-form\" [formGroup]=\"customerForm\">   \r\n            <label class=\"label\" >{{ \"name\" | translate }}<span>*</span></label>\r\n            <input class=\"field purple-input\" formControlName=\"name\" type=\"text\" pInputText />\r\n                \r\n            <label class=\"label\" >{{ \"surname\" | translate }}<span>*</span></label>\r\n            <input class=\"field purple-input\" formControlName=\"surname\" type=\"text\" pInputText />\r\n                \r\n            <label class=\"label\" >{{ \"phonenumber\" | translate }}</label>\r\n            <p-inputNumber class=\"field form-inputNumber purple-inputnumber\" prefix=\"(0)\" formControlName=\"phoneNumber\" ></p-inputNumber>\r\n                \r\n            <label class=\"label\" >{{ \"email\" | translate }}<span>*</span></label>\r\n            <input class=\"field purple-input\" formControlName=\"email\" type=\"text\" pInputText />\r\n           \r\n        </form>\r\n    </section>\r\n    <section class=\"form-required\">\r\n        <div>required*</div>\r\n    </section>\r\n    <app-form-status [validity]= \"customerForm.valid\" ></app-form-status>\r\n    <div>\r\n        <button  pButton label='{{ \"cancel\" | translate }}' icon=\"pi pi-times\" class=\"p-button-text purple-button-text\" (click)=\"cancelDialog()\"></button>\r\n        <button [disabled]=\"!customerForm.valid\"  pButton label='{{ \"save\" | translate }}' icon=\"pi pi-check\" class=\"p-button-text purple-button-text\" (click)=\"saveDialog()\"></button>\r\n    </div>\r\n    <!--Dialogs-->\r\n    <p-confirmDialog class=\"purple-confirmdialog\" key=\"cancelDialog\" header=\"Cancel operation?\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n    <p-confirmDialog class=\"purple-confirmdialog\" key=\"saveDialog\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n//models\r\nimport { PaginationParams } from 'src/app/core/models/utility/PaginationParams';\r\nimport { Customer } from 'src/app/core/models/datamodels/Customer';\r\nimport { DynamicColumn } from 'src/app/core/models/utility/DynamicColumn';\r\nimport { IFormable } from 'src/app/core/models/utility/IFormable';\r\nimport { IRefreashable } from 'src/app/core/models/utility/IRefreshable';\r\n\r\n//components\r\nimport { CustomerFormComponent } from './customer-form/customer-form.component';\r\n\r\n//services\r\nimport { LocalService } from 'src/app/core/services/local.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CustomerService } from 'src/app/core/services/customer.service';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\nimport { promise } from 'protractor';\r\n\r\n@Component({\r\n  selector: 'app-customer-view',\r\n  templateUrl: './customer-view.component.html',\r\n  styleUrls: ['./customer-view.component.scss']\r\n})\r\nexport class CustomerViewComponent implements OnInit, IRefreashable, IFormable {\r\n  \r\n  public customers: Customer[];\r\n\r\n  public customersCounter: number;\r\n\r\n  public cols: DynamicColumn[];\r\n\r\n  public selectedCustomer: Customer;\r\n\r\n  public formHeader: string;\r\n\r\n  public paginationParams: PaginationParams;\r\n\r\n  public isLoading: boolean = false; \r\n\r\n  constructor(\r\n    private readonly router: Router, \r\n    private readonly customerService: CustomerService, \r\n    public dialogService: DialogService, \r\n    private translateService: TranslateService,\r\n    private localStorage: LocalService) {}\r\n  \r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'name', header: 'name'},\r\n      {field: 'surname', header: 'surname'},\r\n      {field: 'phoneNumber', header: 'phonenumber'},\r\n      {field: 'email', header: 'email'},\r\n    ];\r\n    this.paginationParams = {\r\n      first: 0,\r\n      rowsNumber: 5\r\n    };\r\n    this.refreshData();\r\n  }\r\n\r\n  public createFormDialog(): void {\r\n    this.translateService.get(\"customerform\").subscribe(translation => {\r\n      const ref = this.dialogService.open(CustomerFormComponent,\r\n        {\r\n          header: translation,\r\n          draggable: true,\r\n          resizable: true,\r\n          maximizable: true\r\n        });\r\n      ref.onClose.subscribe((customer: Customer) => {\r\n        if(customer){\r\n          this.customerService.createCustomer(customer, \"Customer\").subscribe(() => {\r\n            this.refreshData();\r\n          });        \r\n        } \r\n      });\r\n    });\r\n  }\r\n\r\n  public editFormDialog(data: any): void {\r\n    this.translateService.get(\"customerform\").subscribe(translation => {\r\n      const ref = this.dialogService.open(CustomerFormComponent,\r\n        {\r\n          header: translation,\r\n          data: data,\r\n          draggable: true,\r\n          resizable: true,\r\n          maximizable: true\r\n        });\r\n        ref.onClose.subscribe((customer: Customer) => {\r\n          if(customer){\r\n            this.customerService.updateCustomer(customer).subscribe(() =>{\r\n              this.refreshData();\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  public onCustomerSelected(customer:Customer): void{\r\n    this.selectedCustomer = customer;\r\n  }\r\n\r\n  public deleteCustomer(id: any): void{\r\n    this.customerService.deleteCustomerById(id).subscribe(() =>{      \r\n      this.refreshData();\r\n    });\r\n  }\r\n\r\n  public onShowBuildingsClick(): void{\r\n    this.router.navigateByUrl(`/manager/customer/${this.selectedCustomer.id}/buildings`);\r\n  }\r\n\r\n  public updatePaginationParams(params: PaginationParams): void{\r\n    this.paginationParams = params;\r\n    this.refreshData();\r\n  }\r\n\r\n  public async refreshData():Promise<void>{\r\n    this.isLoading = true;\r\n    await this.customerService.countCustomerByProviderId(this.localStorage.getData('id')).toPromise().then((customersCounter: number) =>{\r\n      this.customersCounter = customersCounter;\r\n    });\r\n    await this.customerService.getCustomersByProviderId(\r\n      this.localStorage.getData('id'), \r\n      this.paginationParams.first, \r\n      this.paginationParams.rowsNumber).toPromise().then((customers: Customer[]) => {\r\n        this.customers = customers;\r\n        this.isLoading = false;\r\n    });\r\n  }\r\n\r\n}\r\n","<div  class=\"customer-view view\">\r\n    <section class=\"header-view\">\r\n        \r\n    </section>\r\n    <section class=\"table-toolbar\">\r\n        <p-toolbar class=\"toolbar\" styleClass=\"mb-4 gap-2\">\r\n            <ng-template pTemplate=\"left\" class=\"left-side-toolbar\">\r\n                <button  pButton (click)=\"createFormDialog()\" label='{{ \"new\" | translate }}' icon=\"pi pi-plus\" class=\"p-button-sm mr-2 purple-button\"></button>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"right\" class=\"right-side-toolbar\">\r\n                <button  pButton (click)=\"onShowBuildingsClick()\" label='{{ \"showbuilding\" | translate }}' [disabled]=\"selectedCustomer == null\" icon=\"pi pi-building\" class=\"p-button-sm mr-2 purple-button\"></button>\r\n            </ng-template>\r\n        </p-toolbar>\r\n    </section>\r\n    <section class=\"table-container\">\r\n        <app-dynamic-table \r\n            [collection]=\"customers\" \r\n            [totalRecords]=\"customersCounter\"\r\n            [cols]=\"cols\" \r\n            [isDeletable]=\"true\"\r\n            [isEditable]=\"true\"\r\n            [isLoading]=\"isLoading\"\r\n            [isPaginable]=\"true\"\r\n            (onEdit)=\"editFormDialog($event)\" \r\n            (onDelete)=\"deleteCustomer($event)\"\r\n            (onSelect)=\"onCustomerSelected($event)\"\r\n            (onPageChange)=\"updatePaginationParams($event)\">\r\n        </app-dynamic-table>\r\n    </section>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\n\r\n//models\r\nimport { DynamicColumn } from 'src/app/core/models/utility/DynamicColumn';\r\n\r\n//services\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { PaginationParams } from 'src/app/core/models/utility/PaginationParams';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-dynamic-table',\r\n  templateUrl: './dynamic-table.component.html',\r\n  styleUrls: ['./dynamic-table.component.scss'],\r\n  providers: [ConfirmationService]\r\n})\r\nexport class DynamicTableComponent{\r\n\r\n  //data input\r\n  @Input() collection: any[];\r\n  @Input() totalRecords: number;\r\n  @Input() cols: DynamicColumn[];\r\n\r\n  //emitter\r\n  @Output() onEdit: EventEmitter<any> = new EventEmitter();\r\n  @Output() onDelete: EventEmitter<any> = new EventEmitter();\r\n  @Output() onSelect: EventEmitter<any> = new EventEmitter();\r\n  \r\n\r\n  //selection\r\n  public selectedItems: any[] = [];\r\n  public selectedItem: any;\r\n\r\n  //pagination\r\n  public rowsNumber: number = 5;\r\n  public rowsPerPage: number[] = [5, 10, 15];\r\n\r\n  \r\n  @Output() onPageChange: EventEmitter<PaginationParams> = new EventEmitter();\r\n\r\n  //table params\r\n  @Input() public isEditable: boolean = false;\r\n  @Input() public isDeletable: boolean = false;\r\n  @Input() public isLoading: boolean = false;\r\n  @Input() public isPaginable: boolean = false;\r\n\r\n  constructor(\r\n    private confirmationService: ConfirmationService,\r\n    private translateService: TranslateService){}\r\n\r\n  public loadCollectionLazy(event: LazyLoadEvent): void {\r\n    const paginationParams: PaginationParams = {\r\n      first: event.first || 0,\r\n      rowsNumber: event.rows || 5\r\n    };\r\n    this.onPageChange.emit(paginationParams);\r\n  }\r\n\r\n  public onEditClick(rowData: any): void {\r\n    this.onEdit.emit(rowData);\r\n  }\r\n\r\n  public onDeleteClick(id: any): void{\r\n    this.translateService.get(\"deleteMessage\").subscribe(translation => {\r\n      this.confirmationService.confirm({\r\n        message: translation,\r\n        key: 'deleteDialog',\r\n        accept: () => {\r\n            this.onDelete.emit(id);\r\n        }\r\n      }); \r\n    });\r\n  }\r\n\r\n  public onSelectionSend(): void {\r\n    this.onSelect.emit(this.selectedItem);\r\n  }\r\n\r\n  /*\r\n  public debug(data: any, field: string) {\r\n    console.log(data);\r\n    console.log(\"field: \" + field);\r\n  }\r\n  */\r\n\r\n  public parseData(data: any, field: string): string {\r\n    if(typeof data[field] == 'boolean') this.parseBoolean(data, field);\r\n    if(field.includes('.')) return field.split('.').reduce((acc: any, obj: any) => acc[obj], data);\r\n    if(typeof data[field] == 'string' && (data[field].match(/ - /g) || []).length === 1){\r\n      const parts = data[field].split(\" - \");\r\n      var element = \"\";\r\n      this.translateService.get(parts[0]).subscribe(translation => {\r\n        element = translation + \" - \" + parts[1]\r\n      });\r\n      return element;\r\n    }\r\n    else return data[field];\r\n  }\r\n\r\n  public parseBoolean(data: any, booleanField: string): any {\r\n    return data[booleanField] ? data[booleanField] = '✔️' : data[booleanField] = '❌'\r\n  }\r\n}\r\n","<div  class=\"d-table\">\r\n    <p-table \r\n        class=\"purple-table\"\r\n        [columns]=\"cols\" \r\n        [value]=\"collection\"\r\n        [scrollable]=\"true\"\r\n        scrollHeight=\"flex\"\r\n        [loading]=\"isLoading\"\r\n        [lazy]=\"true\"\r\n        (onLazyLoad)=\"loadCollectionLazy($event)\"\r\n        selectionMode=\"single\"\r\n        [(selection)]=\"selectedItem\" \r\n        (onRowSelect)=\"onSelectionSend()\"\r\n        (onRowUnselect)=\"onSelectionSend()\"\r\n        datakey=\"id\" \r\n        [paginator]=\"isPaginable\" \r\n        [rows]=\"rowsNumber\" \r\n        [totalRecords]=\"totalRecords\"\r\n        [rowsPerPageOptions]=\"rowsPerPage\"\r\n        styleClass=\"p-datatable-striped p-datatable-lg\" \r\n        [tableStyle]=\"{'min-width': '30rem'}\"\r\n        [rowHover]=\"true\">   \r\n        \r\n        <ng-template pTemplate=\"header\" class=\"table-header\">\r\n            <tr >\r\n                <th *ngFor=\"let col of cols\">{{ col.header | translate }}</th>  \r\n                <th *ngIf=\"isEditable || isDeletable\"></th>           \r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" class=\"table-body\" let-rowData >\r\n            <tr [pSelectableRow]=\"rowData\" class=\"table-row\" >\r\n                <td *ngFor=\"let col of cols\" >\r\n                    {{ parseData(rowData, col.field) | translate}}\r\n                </td>     \r\n                <td class=\"actions-column\" *ngIf=\"isEditable || isDeletable\">\r\n                    <button (click)=\"onEditClick(rowData)\" pButton *ngIf=\"isEditable\" icon=\"pi pi-pencil\" class=\"btn p-button-rounded p-button-outlined p-button-secondary mr-2 p-button-sm\"></button>\r\n                    <button (click)=\"onDeleteClick(rowData.id)\" pButton *ngIf=\"isDeletable\" icon=\"pi pi-trash\" class=\"btn p-button-rounded p-button-outlined p-button-danger p-button-sm\"></button>\r\n                </td>           \r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n    <!--Dialogs-->\r\n    <p-confirmDialog class=\"purple-confirmdialog\" key=\"deleteDialog\" header=\"Delete confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n\r\nimport { BuildingViewComponent } from './building-view/building-view.component';\r\nimport { ContractViewComponent } from './contract-view/contract-view.component';\r\nimport { CustomerViewComponent } from './customer-view/customer-view.component';\r\nimport { MeterViewComponent } from './meter-view/meter-view.component';\r\nimport { ProviderViewComponent } from './provider-view/provider-view.component';\r\nimport { WalletViewComponent } from './wallet-view/wallet-view.component';\r\nimport { ChartViewComponent } from './chart-view/chart-view.component';\r\nimport { PriceViewComponent } from './contract-view/price-view/price-view.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'contracts',\r\n        component: ContractViewComponent\r\n    },\r\n    {\r\n        path: 'contract/:contractId/prices',\r\n        component: PriceViewComponent\r\n    },\r\n    {\r\n        path: 'buildings',\r\n        component: BuildingViewComponent,\r\n    },\r\n    {\r\n        path: 'building',\r\n        children: [\r\n            {\r\n                path: ':buildingId/meters',\r\n                component: MeterViewComponent\r\n                //component: BuildingMeterViewComponent\r\n            },\r\n            {\r\n                path: ':walletId/meters',\r\n                component: MeterViewComponent\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path: 'customers',\r\n        component: CustomerViewComponent,\r\n    },\r\n    {\r\n        path: 'customer/:customerId',\r\n        children: [\r\n            {\r\n                path: 'buildings',\r\n                component: BuildingViewComponent\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path: 'providers',\r\n        component: ProviderViewComponent\r\n    },\r\n    {\r\n        path: 'meters',\r\n        component: MeterViewComponent\r\n    },   \r\n    {\r\n        path: 'wallets',\r\n        component: WalletViewComponent\r\n    },\r\n    {\r\n        path: 'wallets/:buildingId/meters',\r\n        component: MeterViewComponent\r\n    },\r\n    {\r\n        path: 'chart/:id',\r\n        component: ChartViewComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ManagerRoutingModule { }","\r\n//Modules\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PrimengModule } from 'src/app/shared-modules/primeng/primeng.module';\r\nimport { AvatarModule } from 'primeng/avatar';\r\n\r\n//Components\r\nimport { ManagerComponent } from './manager.component';\r\nimport { MenuComponent } from './layouts/menu/menu.component';\r\nimport { ManagerRoutingModule } from './manager-routing.module';\r\nimport { ContractViewComponent } from './contract-view/contract-view.component';\r\nimport { BuildingViewComponent } from './building-view/building-view.component';\r\nimport { CustomerViewComponent } from './customer-view/customer-view.component';\r\nimport { MeterViewComponent } from './meter-view/meter-view.component';\r\nimport { ProviderViewComponent } from './provider-view/provider-view.component';\r\nimport { DynamicTableComponent } from './layouts/dynamic-table/dynamic-table.component';\r\nimport { WalletViewComponent } from './wallet-view/wallet-view.component';\r\nimport { ContractFormComponent } from './contract-view/contract-form/contract-form.component';\r\nimport { CustomerFormComponent } from './customer-view/customer-form/customer-form.component';\r\nimport { BuildingFormComponent } from './building-view/building-form/building-form.component';\r\nimport { MeterFormComponent } from './meter-view/meter-form/meter-form.component';\r\nimport { MeterHistoryComponent } from './meter-view/meter-history/meter-history.component';\r\nimport { LanguageSelectorModule } from '../language-selector/language-selector.module';\r\nimport { UserCardComponent } from './layouts/menu/user-card/user-card.component';\r\nimport { NotificationComponent } from './layouts/notification/notification.component';\r\nimport { NotificationFormComponent } from './layouts/notification/notification-form/notification-form.component';\r\nimport { ChartViewComponent } from './chart-view/chart-view.component';\r\nimport { MeterHistoryFormComponent } from './meter-view/meter-history/meter-history-form/meter-history-form.component';\r\nimport { PriceViewComponent } from './contract-view/price-view/price-view.component';\r\nimport { PriceFormComponent } from './contract-view/price-view/price-form/price-form.component';\r\nimport { WalletFormComponent } from './wallet-view/wallet-form/wallet-form.component';\r\nimport { WalletMeterFormComponent } from './wallet-view/wallet-meter-form/wallet-meter-form.component';\r\nimport { FormStatusModule } from './layouts/form-status/form-status.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ManagerComponent,\r\n    MenuComponent,\r\n    ContractViewComponent,\r\n    BuildingViewComponent,\r\n    CustomerViewComponent,\r\n    MeterViewComponent,\r\n    ProviderViewComponent,\r\n    DynamicTableComponent,\r\n    WalletViewComponent,\r\n    ContractFormComponent,\r\n    CustomerFormComponent,\r\n    BuildingFormComponent,\r\n    MeterFormComponent,\r\n    MeterHistoryComponent,\r\n    UserCardComponent,\r\n    NotificationComponent,\r\n    NotificationFormComponent,\r\n    ChartViewComponent,\r\n    MeterHistoryFormComponent,\r\n    PriceViewComponent,\r\n    PriceFormComponent,\r\n    WalletFormComponent,\r\n    WalletMeterFormComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PrimengModule,\r\n    AvatarModule,\r\n    RouterModule,\r\n    ManagerRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    LanguageSelectorModule,\r\n    FormStatusModule,\r\n    TranslateModule\r\n  ],\r\n\r\n})\r\nexport class ManagerModule {\r\n  \r\n  public directTranslate(){\r\n    \r\n  }\r\n }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n//models\r\nimport { Meter } from 'src/app/core/models/datamodels/Meter';\r\nimport { EnergyType } from 'src/app/core/models/datamodels/EnergyType';\r\n\r\n//components\r\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\r\n\r\n//services\r\nimport { MeterService } from 'src/app/core/services/meter.service';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-meter-form',\r\n  templateUrl: './meter-form.component.html',\r\n  styleUrls: ['./meter-form.component.scss'],\r\n  providers: [ConfirmationService]\r\n})\r\n\r\nexport class MeterFormComponent implements OnInit{\r\n  \r\n  //Current meter\r\n  private _meter: Meter;\r\n\r\n  //Form\r\n  public meterForm: FormGroup;\r\n  public modeForm: \"create\" | \"edit\";\r\n\r\n  //Dropdown\r\n  public energies: EnergyType[];\r\n  public selectedEnergy: EnergyType;\r\n\r\n  constructor(\r\n    private readonly meterService: MeterService, \r\n    private fb: FormBuilder, \r\n    public ref: DynamicDialogRef, \r\n    public config: DynamicDialogConfig, \r\n    private translateService: TranslateService,\r\n    private confirmationService: ConfirmationService) {}\r\n  \r\n  ngOnInit(): void {\r\n\r\n    this.initForm();\r\n    \r\n    this.meterService.getAllEnergyTypes().subscribe((energyTypes: EnergyType[]) => {\r\n      this.energies = energyTypes;\r\n      for (let index = 0; index < this.energies.length; index++) {\r\n        this.translateService.get(this.energies[index].value).subscribe(translation => {\r\n          this.energies[index].value = translation;\r\n        });\r\n      }  \r\n    });\r\n  }\r\n\r\n  private initForm() {\r\n    \r\n    this.meterForm = this.fb.group({\r\n      id: [null],\r\n      value: [0.0, Validators.required],\r\n      energyType: [null, Validators.required],\r\n      numeric: [false, Validators.required],\r\n      open:[false, Validators.required]\r\n    });\r\n\r\n    \r\n    if(this.config.data){\r\n      this.modeForm = \"edit\";\r\n      this.config.data.numeric = this.config.data.numeric == \"✔️\";\r\n      this.config.data.open = this.config.data.open == \"✔️\";\r\n      this._meter = this.config.data;\r\n      this.updateForm();\r\n    }else{\r\n      this.modeForm = \"create\";\r\n    }\r\n  }\r\n\r\n  public cancelDialog(): void{\r\n    this.translateService.get(\"cancelMessage\").subscribe(translation => {\r\n      this.confirmationService.confirm({\r\n        message: translation,\r\n        key: 'cancelDialog',\r\n        accept: () => {\r\n          this.ref.close();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public saveDialog(): void{\r\n    this.translateService.get(\"saveMessage\").subscribe(translation => {\r\n      this.confirmationService.confirm({\r\n        message: translation,\r\n        key: 'saveDialog',\r\n        accept: () => {\r\n          this._meter = this.meterForm.value;\r\n          this._meter.energyType = this.energies[this._meter.energyType as number];\r\n          this.ref.close(this._meter);\r\n        }\r\n      });  \r\n    });\r\n  }\r\n\r\n  private updateForm(): void {\r\n    this.meterForm.patchValue(this._meter);\r\n    if(this.modeForm === \"edit\"){\r\n      this.meterForm.get(\"energyType\").patchValue(this._meter.energyType.id);\r\n      this.meterForm.get(\"energyType\").disable();\r\n    }\r\n  }\r\n}\r\n","<div  class=\"dialog-component\">\r\n    <section class=\"form-section\">\r\n        <form class=\"grid-form\" [formGroup]=\"meterForm\">\r\n        \r\n            <label class=\"label\" >{{ \"value\" | translate }}<span>*</span></label>\r\n            <p-inputNumber class=\"field form-inputNumber purple-inputnumber\" formControlName=\"value\" type=\"text\"></p-inputNumber>\r\n                \r\n            <label class=\"label\" >{{ \"energytype\" | translate }}<span>*</span></label>\r\n            <p-dropdown appendTo=\"body\" class=\"field form-dropdown purple-dropdown\" formControlName=\"energyType\" [options]=\"energies\" optionLabel=\"value\" optionValue=\"id\" placeholder = '{{ \"selectenergy\" | translate }}' [showClear]=\"true\"></p-dropdown>\r\n                \r\n            <label class=\"label\" >{{ \"isnumeric\" | translate }}<span>*</span></label>\r\n            <p-checkbox class=\"field purple-checkbox\" formControlName=\"numeric\" [binary]=\"true\"></p-checkbox>   \r\n    \r\n            <label class=\"label\" >{{ \"open\" | translate }}<span>*</span></label>\r\n            <p-checkbox class=\"field purple-checkbox\" formControlName=\"open\" [binary]=\"true\"></p-checkbox>  \r\n        </form>\r\n    </section>\r\n    <section class=\"form-required\">\r\n        <div>required*</div>\r\n    </section>\r\n    <app-form-status [validity]= \"meterForm.valid\" ></app-form-status>\r\n    <div>\r\n        <button  pButton label='{{ \"cancel\" | translate }}' icon=\"pi pi-times\" class=\"p-button-text purple-button-text\" (click)=\"cancelDialog()\"></button>\r\n        <button [disabled]=\"!meterForm.valid\"  pButton label='{{ \"save\" | translate }}' icon=\"pi pi-check\" class=\"p-button-text purple-button-text\" (click)=\"saveDialog()\"></button>\r\n    </div>\r\n    <!--Dialogs-->\r\n    <p-confirmDialog class=\"purple-confirmdialog\" key=\"cancelDialog\" header=\"Cancel operation?\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n    <p-confirmDialog class=\"purple-confirmdialog\" key=\"saveDialog\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n//models\r\nimport { MeterHistory } from 'src/app/core/models/datamodels/MeterHistory';\r\n\r\n//components\r\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\r\n\r\n//services\r\nimport { MeterService } from 'src/app/core/services/meter.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ConfirmationService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-meter-history-form',\r\n  templateUrl: './meter-history-form.component.html',\r\n  styleUrls: ['./meter-history-form.component.scss'],\r\n  providers: [ConfirmationService]\r\n})\r\nexport class MeterHistoryFormComponent implements OnInit{\r\n\r\n    //Current meter\r\n    private _meterHistory: MeterHistory;\r\n\r\n    //Form\r\n    public meterHistoryForm: FormGroup;\r\n    public modeForm: \"create\" | \"edit\";\r\n\r\n    constructor(    \r\n      private readonly meterService: MeterService, \r\n      private fb: FormBuilder, \r\n      public ref: DynamicDialogRef, \r\n      public config: DynamicDialogConfig, \r\n      private confirmationService: ConfirmationService,\r\n      private translateService: TranslateService){}\r\n      \r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  private initForm() {\r\n    \r\n    this.meterHistoryForm = this.fb.group({\r\n      id: [null],\r\n      date: [null, Validators.required],\r\n      value: [0.0, Validators.required],\r\n    });\r\n\r\n    if(this.config.data){\r\n      this.modeForm = \"edit\";\r\n      this._meterHistory = this.config.data;\r\n      this.updateForm();\r\n    }else{\r\n      this.modeForm = \"create\";\r\n    }\r\n  }\r\n\r\n  public cancelDialog(): void{\r\n    this.translateService.get(\"cancelMessage\").subscribe(translation => {\r\n      this.confirmationService.confirm({\r\n        message: translation,\r\n        key: 'cancelDialog',\r\n        accept: () => {\r\n          this.ref.close();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public saveDialog(): void{\r\n    this.translateService.get(\"saveMessage\").subscribe(translation => {\r\n      this.confirmationService.confirm({\r\n        message: translation,\r\n        key: 'saveDialog',\r\n        accept: () => {\r\n          this._meterHistory = this.meterHistoryForm.value;\r\n          this.ref.close(this._meterHistory);\r\n        }\r\n      });  \r\n    })\r\n  }\r\n\r\n  private updateForm(): void {\r\n    this.meterHistoryForm.patchValue(this._meterHistory);\r\n  }\r\n}\r\n","<div  class=\"dialog-component\">\r\n    <section class=\"form-section\">\r\n        <form class=\"grid-form\" [formGroup]=\"meterHistoryForm\">     \r\n            <label class=\"label\" >Date<span>*</span></label>\r\n            <p-calendar class=\"field form-calendar purple-calendar\" formControlName=\"date\" dateFormat=\"yy-mm-dd\" dataType=\"string\" [showIcon]=\"true\"></p-calendar>\r\n    \r\n            <label class=\"label\" >{{ \"value\" | translate }}<span>*</span></label>\r\n            <p-inputNumber class=\"field form-inputNumber purple-inputnumber\" formControlName=\"value\" type=\"text\"></p-inputNumber>                        \r\n        </form>\r\n    </section>\r\n    <section class=\"form-required\">\r\n        <div>required*</div>\r\n    </section>\r\n    <app-form-status [validity]= \"meterHistoryForm.valid\" ></app-form-status>\r\n    <div>\r\n        <button  pButton label='{{ \"cancel\" | translate }}' icon=\"pi pi-times\" class=\"p-button-text purple-button-text\" (click)=\"cancelDialog()\"></button>\r\n        <button [disabled]=\"!meterHistoryForm.valid\"  pButton label='{{ \"save\" | translate }}' icon=\"pi pi-check\" class=\"p-button-text purple-button-text\" (click)=\"saveDialog()\"></button>\r\n    </div>\r\n    <!--Dialogs-->\r\n    <p-confirmDialog class=\"purple-confirmdialog\" key=\"cancelDialog\" header=\"Cancel operation?\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n    <p-confirmDialog class=\"purple-confirmdialog\" key=\"saveDialog\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ConfirmationService, LazyLoadEvent } from 'primeng/api';\r\n\r\n//models\r\nimport { MeterHistory } from 'src/app/core/models/datamodels/MeterHistory';\r\n\r\n//components\r\nimport { MeterHistoryFormComponent } from './meter-history-form/meter-history-form.component';\r\nimport { DynamicDialogRef, DynamicDialogConfig, DialogService } from 'primeng/dynamicdialog';\r\n\r\n//services\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LocalService } from 'src/app/core/services/local.service';\r\nimport { MeterService } from 'src/app/core/services/meter.service';\r\n\r\n@Component({\r\n  selector: 'app-meter-history',\r\n  templateUrl: './meter-history.component.html',\r\n  styleUrls: ['./meter-history.component.scss'],\r\n  providers: [ConfirmationService]\r\n})\r\n\r\nexport class MeterHistoryComponent{\r\n\r\n  public meterHistoric: MeterHistory[];\r\n\r\n  public historiesCounter\r\n\r\n  public selectedMeterHistory: MeterHistory;\r\n  \r\n  public first: number = 0;\r\n\r\n  public rowsNumber: number = 15;\r\n\r\n  public totalRecords: number;\r\n  \r\n  public isLoading: boolean = true;\r\n\r\n  constructor(private readonly meterService: MeterService, \r\n    public ref: DynamicDialogRef, \r\n    public config: DynamicDialogConfig, \r\n    public translateService: TranslateService, \r\n    public dialogService: DialogService, \r\n    public localStorage: LocalService,\r\n    private confirmationService: ConfirmationService){}\r\n\r\n  public loadHistoricLazy(event: LazyLoadEvent): void{\r\n    this.isLoading = true;\r\n    this.meterService.countMeterHistoryByMeterId(this.config.data).subscribe((historiesCounter: number) => {\r\n      this.totalRecords = historiesCounter;\r\n    });\r\n    if(event.sortField){\r\n      this.meterService.getMeterHistoryByMeterId(this.config.data, event.first, event.rows, event.sortField, event.sortOrder).subscribe((meterHistory: MeterHistory[]) => {\r\n        this.meterHistoric = meterHistory;\r\n        this.isLoading = false;\r\n      });\r\n    }else{\r\n      this.meterService.getMeterHistoryByMeterId(this.config.data, event.first, event.rows).subscribe((meterHistory: MeterHistory[]) => {\r\n        this.meterHistoric = meterHistory;\r\n        this.isLoading = false;\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  public editFormDialog(data: any): void {\r\n    this.translateService.get(\"meterhistoryform\").subscribe(translation => {\r\n      const ref = this.dialogService.open(MeterHistoryFormComponent,\r\n        {\r\n          header: translation,\r\n          data: data,\r\n          draggable: true,\r\n          resizable: true,\r\n          maximizable: true\r\n        });\r\n  \r\n        ref.onClose.subscribe((meterHistory: MeterHistory) => {\r\n          if(meterHistory){\r\n            this.meterService.updateMeterHistory(meterHistory).subscribe(() => {\r\n              this.refreshData();\r\n            });        \r\n          } \r\n        });\r\n    });\r\n  }\r\n\r\n\r\n  public deleteMeterHistory(id: any): void{\r\n    this.translateService.get(\"deleteMessage\").subscribe(translation => {\r\n      this.confirmationService.confirm({\r\n        message: translation,\r\n        key: 'deleteDialog',\r\n        accept: () => {\r\n          this.meterService.deleteMeterHistoryById(id).subscribe(() => {\r\n            this.refreshData();\r\n          });\r\n        }\r\n      }); \r\n    });\r\n  }\r\n\r\n  \r\n  public createFormDialog(): void {\r\n    this.translateService.get(\"meterhistoryform\").subscribe(translation => {\r\n      const ref = this.dialogService.open(MeterHistoryFormComponent,\r\n        {\r\n          header: translation,\r\n          draggable: true,\r\n          resizable: true,\r\n          maximizable: true\r\n        });\r\n  \r\n        ref.onClose.subscribe((meterHistory: MeterHistory) => {\r\n          if(meterHistory){\r\n            this.meterService.createMeterHistory(meterHistory, this.config.data).subscribe(() => {\r\n              this.refreshData();\r\n            });        \r\n          } \r\n        });\r\n    })\r\n  }\r\n\r\n  public async refreshData(): Promise<void>{\r\n    await this.meterService.countMeterHistoryByMeterId(this.config.data).toPromise().then((historiesCounter: number) => {\r\n      this.totalRecords = historiesCounter;\r\n    });\r\n    await this.meterService.getMeterHistoryByMeterId(this.config.data, this.first , this.rowsNumber).toPromise().then((meterHistory: MeterHistory[]) => {\r\n      this.meterHistoric = meterHistory;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  public onMeterHistorySelected(meterHistory: MeterHistory): void{\r\n    this.selectedMeterHistory = meterHistory;\r\n  }\r\n\r\n  public isAdmin(): boolean{\r\n    return JSON.parse(this.localStorage.getData(\"roles\")).includes(\"ADMIN\");\r\n  }\r\n}\r\n","<div  class=\"historic-container\">\r\n    <button  pButton  label='{{ \"createdata\" | translate }}' (click) = \"createFormDialog()\" icon=\"pi pi-plus\" class=\"mr-2 p-button-sm purple-button\"></button>\r\n    <div class=\"d-table\">\r\n        <p-table class=\"history-table purple-table\"\r\n            dataKey=\"id\"\r\n            [value]=\"meterHistoric\" \r\n            [loading]=\"isLoading\"\r\n            [lazy]=\"true\"\r\n            (onLazyLoad)=\"loadHistoricLazy($event)\"\r\n            [paginator]=\"true\" \r\n            [rows]=\"rowsNumber\" \r\n            [(first)]=\"first\" \r\n            styleClass=\"p-datatable-sm p-datatable-striped\" \r\n            [tableStyle]=\"{'min-width': '20rem'}\"\r\n            [rowHover]=\"true\"\r\n            [totalRecords]=\"totalRecords\"\r\n            [globalFilterFields]=\"['value','date']\">   \r\n            \r\n            <ng-template pTemplate=\"header\" class=\"table-header\">\r\n                <tr>               \r\n                    <th  pSortableColumn=\"value\">{{ \"value\" | translate }} <p-sortIcon field=\"value\"></p-sortIcon></th>    \r\n                    <th pSortableColumn=\"date\">Date <p-sortIcon field=\"date\"></p-sortIcon></th>   \r\n                    <th *ngIf = \"isAdmin()\"></th>      \r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-history >\r\n                <tr class=\"table-row\">\r\n                    <td>{{history.value}}</td> \r\n                    <td>{{history.date}}</td> \r\n                    <td class=\"actions-column\" *ngIf = \"isAdmin()\">\r\n                        <button (click)=\"editFormDialog(history)\" pButton icon=\"pi pi-pencil\" class=\"btn p-button-rounded p-button-outlined p-button-secondary mr-2 p-button-sm\"></button>\r\n                        <button (click)=\"deleteMeterHistory(history.id)\" pButton icon=\"pi pi-trash\" class=\"btn p-button-rounded p-button-outlined p-button-danger p-button-sm\"></button>\r\n                    </td>           \r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n        <!--Dialogs-->\r\n        <p-confirmDialog class=\"purple-confirmdialog\" key=\"deleteDialog\" header=\"Delete confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute} from '@angular/router';\r\n\r\n//models\r\nimport { PaginationParams } from 'src/app/core/models/utility/PaginationParams';\r\nimport { Meter } from 'src/app/core/models/datamodels/Meter';\r\nimport { DynamicColumn } from 'src/app/core/models/utility/DynamicColumn';\r\nimport { IFormable } from 'src/app/core/models/utility/IFormable';\r\nimport { IRefreashable } from 'src/app/core/models/utility/IRefreshable';\r\n\r\n//components\r\nimport { MeterHistoryComponent } from './meter-history/meter-history.component';\r\nimport { MeterFormComponent } from './meter-form/meter-form.component';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\n\r\n//services\r\nimport { LocalService } from 'src/app/core/services/local.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MeterService } from 'src/app/core/services/meter.service';\r\nimport { RouteHistoryService } from 'src/app/core/directives/route-history.service';\r\n\r\n@Component({\r\n  selector: 'app-meter-view',\r\n  templateUrl: './meter-view.component.html',\r\n  styleUrls: ['./meter-view.component.scss']\r\n})\r\nexport class MeterViewComponent implements OnInit, IRefreashable, IFormable{\r\n  \r\n  public meters: Meter[];\r\n\r\n  public cols: DynamicColumn[];\r\n\r\n  public formHeader: string;\r\n\r\n  public currentBuildingId: string;\r\n\r\n  public selectedMeter: Meter;\r\n\r\n  //table data (move to an observable?)\r\n  public paginationParams: PaginationParams;\r\n  public isLoading: boolean = false; \r\n  public first: number;\r\n  public rowsNumber: number;\r\n\r\n  constructor(\r\n    private readonly activatedRoute: ActivatedRoute, \r\n    private readonly meterService: MeterService,  \r\n    public dialogService: DialogService,\r\n    private routeHistory: RouteHistoryService,\r\n    private translateService: TranslateService,\r\n    private localStorage: LocalService) {}\r\n  \r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'value', header: 'value'},\r\n      {field: 'energyType.value', header: 'energytype'},\r\n      {field: 'numeric', header: 'numeric'},\r\n      {field: 'open', header: 'open'}\r\n    ];\r\n    this.refreshData();\r\n  }\r\n\r\n  public createFormDialog(): void {\r\n    this.translateService.get(\"meterform\").subscribe(translation => {\r\n      const ref = this.dialogService.open(MeterFormComponent,\r\n        {\r\n          header: translation,\r\n          draggable: true,\r\n          resizable: true,\r\n          maximizable: true\r\n        });\r\n  \r\n        ref.onClose.subscribe((meter: Meter) => {\r\n          if(meter){\r\n            this.meterService.createMeter(meter, this.currentBuildingId).subscribe(() => {\r\n              this.refreshData();\r\n            });        \r\n          } \r\n        });\r\n    });\r\n  }\r\n\r\n  public editFormDialog(data: any): void {\r\n    this.translateService.get(\"meterform\").subscribe(translation => {\r\n      const ref = this.dialogService.open(MeterFormComponent,\r\n        {\r\n          header: translation,\r\n          data: data,\r\n          draggable: true,\r\n          resizable: true,\r\n          maximizable: true\r\n        });\r\n        ref.onClose.subscribe((meter: Meter) => {\r\n          if(meter){\r\n            this.meterService.updateMeter(meter).subscribe(() => {\r\n              this.refreshData();\r\n            });        \r\n          } \r\n        });\r\n    });\r\n  }\r\n\r\n  public deleteMeter(id: any): void{\r\n    this.meterService.deleteMeter(id).subscribe(() => {\r\n      this.refreshData();\r\n    });\r\n  }\r\n\r\n  public onMeterSelected(meter: Meter): void{\r\n    this.selectedMeter = meter;\r\n  }\r\n\r\n  public onShowHistoryClick(): void{\r\n    this.translateService.get(\"meterhistories\").subscribe(translation => {\r\n      const ref = this.dialogService.open(MeterHistoryComponent,\r\n        {\r\n          header: translation,\r\n          data: this.selectedMeter.id,\r\n          draggable: true,\r\n          resizable: true,\r\n          maximizable: true\r\n        });\r\n    })\r\n  }\r\n\r\n  public onPreviousClick(): void{\r\n    this.routeHistory.back();\r\n  }\r\n\r\n  public async refreshData():Promise<void>{\r\n    this.currentBuildingId = this.activatedRoute.snapshot.params['buildingId'];\r\n    this.isLoading = true;\r\n    if(this.currentBuildingId.includes('H')){\r\n      await this.meterService.getMetersByBuildingId(this.currentBuildingId).toPromise().then((meters: Meter[]) => {\r\n        this.meters = meters;\r\n        this.isLoading = false;\r\n      });\r\n    }else{\r\n      await this.meterService.getMetersByWalletId(this.currentBuildingId).toPromise().then((meters: Meter[]) => {\r\n        this.meters = meters;\r\n        this.isLoading = false;\r\n    });\r\n    }    \r\n  }\r\n\r\n  public isAdmin(): boolean{\r\n    return JSON.parse(this.localStorage.getData(\"roles\")).includes(\"ADMIN\");\r\n  }\r\n}\r\n","<div  class=\"meter-view view\">\r\n    <section class=\"header-view\">\r\n\r\n    </section>\r\n    <section class=\"table-toolbar\">\r\n        <p-toolbar class=\"toolbar\" styleClass=\"mb-4 gap-2\">\r\n            <ng-template pTemplate=\"left\" class=\"left-side-toolbar\">\r\n                <div class=\"router-actions rv-separator\">\r\n                    <button  (click)=\"onPreviousClick()\" pButton label='{{ \"previous\" | translate }}' icon=\"pi pi-chevron-left\" class=\"p-button-sm p-button-secondary\"></button>    \r\n                </div>\r\n                <div class=\"table-actions\" *ngIf=\"isAdmin()\">\r\n                    <button  pButton (click)=\"createFormDialog()\" label='{{ \"new\" | translate }}' icon=\"pi pi-plus\" class=\"mr-2 p-button-sm purple-button\"></button> \r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"right\" class=\"right-side-toolbar\">\r\n                <button  pButton [disabled]=\"selectedMeter == null\" (click)=\"onShowHistoryClick()\" label='{{ \"showhistory\" | translate }}' icon=\"pi pi-history\" class=\"mr-2 p-button-sm purple-button\"></button>\r\n            </ng-template>\r\n        </p-toolbar>\r\n    </section>\r\n    <section class=\"table-container\">\r\n        <app-dynamic-table \r\n            [collection]= \"meters\" \r\n            [cols]= \"cols\" \r\n            [isEditable] = \"isAdmin()\"\r\n            [isDeletable] = \"isAdmin()\"\r\n            [isLoading]=\"isLoading\"\r\n            (onEdit)=\"editFormDialog($event)\" \r\n            (onDelete)=\"deleteMeter($event)\" \r\n            (onSelect)=\"onMeterSelected($event)\">\r\n        </app-dynamic-table>\r\n    </section>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n//models\r\nimport { Provider } from 'src/app/core/models/datamodels/Provider';\r\nimport { DynamicColumn } from 'src/app/core/models/utility/DynamicColumn';\r\nimport { IRefreashable } from 'src/app/core/models/utility/IRefreshable';\r\n\r\n//components\r\n\r\n//services\r\nimport { ProviderService } from 'src/app/core/services/provider.service';\r\n\r\n@Component({\r\n  selector: 'app-provider-view',\r\n  templateUrl: './provider-view.component.html',\r\n  styleUrls: ['./provider-view.component.scss']\r\n})\r\n\r\nexport class ProviderViewComponent implements OnInit, IRefreashable {\r\n\r\n  public providers: Provider[];\r\n  \r\n  public cols: DynamicColumn[];\r\n\r\n  public isLoading: boolean = false; \r\n\r\n  constructor(private readonly providerService: ProviderService){}\r\n  \r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'name', header: 'Name'},\r\n      {field: 'number', header: 'Number'},\r\n      {field: 'city', header: 'City'},\r\n      {field: 'country', header: 'Country'},\r\n      {field: 'zipCode', header: 'Zip code'},\r\n    ];\r\n    this.refreshData();\r\n  }\r\n\r\n\r\n  public refreshData(): void{\r\n    this.isLoading = true;\r\n    this.providerService.getAllProviders().subscribe((providers: Provider[]) => {\r\n      this.providers = providers;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n}\r\n","<div class=\"provider-view view\">\r\n    <section class=\"header-view\">\r\n        \r\n    </section>\r\n    <section class=\"table-toolbar\">\r\n        \r\n    </section>\r\n    <div class=\"table-container\">\r\n        <app-dynamic-table \r\n            [collection]=\"providers\" \r\n            [cols]=\"cols\"\r\n            [isLoading]=\"isLoading\"\r\n            [isEditable]=\"false\"\r\n            [isDeletable]=\"false\"\r\n            [isPaginable]=\"true\">\r\n        </app-dynamic-table>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n//models\r\nimport { Building } from 'src/app/core/models/datamodels/Building';\r\nimport { WalletCreator } from 'src/app/core/models/datamodels/WalletCreator';\r\n\r\n//components\r\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\r\n\r\n//services\r\nimport { BuildingService } from 'src/app/core/services/building.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ConfirmationService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-wallet-form',\r\n  templateUrl: './wallet-form.component.html',\r\n  styleUrls: ['./wallet-form.component.scss'],\r\n  providers:[ConfirmationService]\r\n})\r\n\r\nexport class WalletFormComponent {\r\n\r\n  //Current meter\r\n  private _customerId: string;\r\n\r\n  private walletCreator: WalletCreator;\r\n  \r\n  //Form\r\n  public walletForm: FormGroup;\r\n\r\n  //Dropdown\r\n  public buildings: Building[];\r\n  public selectedEnergy: Building;\r\n\r\n  constructor(\r\n    private readonly buildingService: BuildingService,\r\n    private fb: FormBuilder, \r\n    public ref: DynamicDialogRef, \r\n    public config: DynamicDialogConfig, \r\n    private translateService: TranslateService,\r\n    private confirmationService: ConfirmationService) {}\r\n  \r\n  async ngOnInit() {\r\n\r\n    this.initForm();\r\n\r\n    this.buildingService.getBuildingByCustomerId(this._customerId, 0, 50).subscribe((buildings: Building[]) => {\r\n      this.buildings = buildings;\r\n      this.buildings.forEach(element =>{\r\n        element.fullAdress = (element.buildingName? \"\" : element.buildingName) + `${element.street} ${element.number}, ${element.zipCode} ${element.city}` \r\n      })\r\n    });\r\n  }\r\n\r\n  private initForm(): void{\r\n    \r\n    this.walletForm = this.fb.group({\r\n      customer:[null, Validators.required],\r\n      building: [null, Validators.required],\r\n    });\r\n    \r\n    this._customerId = this.config.data;\r\n    this.updateForm();\r\n  }\r\n\r\n  public cancelDialog(): void{\r\n    this.translateService.get(\"cancelMessage\").subscribe(translation => {\r\n      this.confirmationService.confirm({\r\n        message: translation,\r\n        key: 'cancelDialog',\r\n        accept: () => {\r\n          this.ref.close();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public saveDialog(): void{\r\n    this.translateService.get(\"saveMessage\").subscribe(translation => {\r\n      this.confirmationService.confirm({\r\n        message: translation,\r\n        key: 'saveDialog',\r\n        accept: () => {\r\n          this.walletCreator = this.walletForm.value;\r\n          this.ref.close(this.walletCreator);\r\n        }\r\n      });  \r\n    });\r\n  }\r\n\r\n  private updateForm(): void {\r\n    this.walletForm.get(\"customer\").patchValue(this._customerId);\r\n  }\r\n}\r\n","<div  class=\"wallet-form-container dialog-component\">\r\n    <section class=\"form-section\">\r\n        <form [formGroup]=\"walletForm\" class=\"wallet-form grid-form\">            \r\n            <label class=\"label\" >{{ \"building\" | translate }}</label>\r\n            <p-dropdown appendTo=\"body\" class=\"field purple-dropdown\"  formControlName=\"building\" [options]=\"buildings\" optionLabel=\"fullAdress\" optionValue=\"id\" placeholder = '{{ \"selectbuilding\" | translate }}' [showClear]=\"true\"></p-dropdown>                 \r\n        </form>\r\n    </section>\r\n    <section class=\"form-required\">\r\n        <div>required*</div>\r\n    </section>\r\n    <app-form-status [validity]= \"walletForm.valid\" ></app-form-status>\r\n    <div>\r\n        <button  pButton label='{{ \"cancel\" | translate }}' icon=\"pi pi-times\" class=\"p-button-text purple-button-text\" (click)=\"cancelDialog()\"></button>\r\n        <button [disabled]=\"!walletForm.valid\"  pButton label='{{ \"save\" | translate }}' icon=\"pi pi-check\" class=\"p-button-text purple-button-text\" (click)=\"saveDialog()\"></button>\r\n    </div>\r\n    <!--Dialogs-->\r\n    <p-confirmDialog class=\"purple-confirmdialog\" key=\"cancelDialog\" header=\"Cancel operation?\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n    <p-confirmDialog class=\"purple-confirmdialog\" key=\"saveDialog\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n//models\r\nimport { Meter } from 'src/app/core/models/datamodels/Meter';\r\nimport { Wallet } from 'src/app/core/models/datamodels/Wallet';\r\nimport { WalletMeter } from 'src/app/core/models/datamodels/WalletMeter';\r\n\r\n//components\r\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\r\n\r\n//services\r\nimport { MeterService } from 'src/app/core/services/meter.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ConfirmationService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-wallet-meter-form',\r\n  templateUrl: './wallet-meter-form.component.html',\r\n  styleUrls: ['./wallet-meter-form.component.scss'],\r\n  providers:[ConfirmationService]\r\n})\r\n\r\nexport class WalletMeterFormComponent {\r\n\r\n  //Current meter\r\n  private _wallet: Wallet;\r\n\r\n  private walletMeter: WalletMeter;\r\n  \r\n  //Form\r\n  public walletMeterForm: FormGroup;\r\n\r\n  //Dropdown\r\n  public meters: Meter[];\r\n  public selectedMeter: Meter;\r\n\r\n  constructor(\r\n    private readonly meterService: MeterService,\r\n    private fb: FormBuilder, \r\n    public ref: DynamicDialogRef, \r\n    public config: DynamicDialogConfig, \r\n    private translateService: TranslateService,\r\n    private confirmationService: ConfirmationService) {}\r\n  \r\n  async ngOnInit() {\r\n\r\n    this.initForm();\r\n\r\n    await this.meterService.getMetersByBuildingId(this.config.data.buildingId).toPromise().then((meters: Meter[]) => {\r\n      this.meters = meters;\r\n      this.meters.forEach(element =>{\r\n        this.translateService.get(element.energyType.value).subscribe(translation => {\r\n          element.fullName = element.id + \" | \"+ translation;\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  private initForm(): void{\r\n    \r\n    this.walletMeterForm = this.fb.group({\r\n      wallet: [null, Validators.required],\r\n      meter: [null, Validators.required],\r\n    });\r\n    \r\n    this._wallet = this.config.data;\r\n    this.updateForm();\r\n  }\r\n\r\n  public cancelDialog(): void{\r\n    this.translateService.get(\"cancelMessage\").subscribe(translation => {\r\n      this.confirmationService.confirm({\r\n        message: translation,\r\n        key: 'cancelDialog',\r\n        accept: () => {\r\n          this.ref.close();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public saveDialog(): void{\r\n    this.translateService.get(\"saveMessage\").subscribe(translation => {\r\n      this.confirmationService.confirm({\r\n        message: translation,\r\n        key: 'saveDialog',\r\n        accept: () => {\r\n          this.walletMeter = this.walletMeterForm.value;\r\n          this.ref.close(this.walletMeter);\r\n        }\r\n      });  \r\n    })\r\n  }\r\n\r\n  private updateForm(): void {\r\n    this.walletMeterForm.get(\"wallet\").patchValue(this._wallet.id);\r\n  }\r\n}\r\n","<div  class=\"wallet-meter-form-container dialog-component\">\r\n    <section class=\"form-section\">\r\n        <form [formGroup]=\"walletMeterForm\" class=\"wallet-meter-form grid-form\">           \r\n            <label class=\"label\" >{{ \"meter\" | translate }}</label>\r\n            <p-dropdown appendTo=\"body\" class=\"field purple-dropdown\"  formControlName=\"meter\" [options]=\"meters\" optionLabel=\"fullName\" optionValue=\"id\" placeholder = '{{ \"selectmeter\" | translate }}' [showClear]=\"true\"></p-dropdown>\r\n        </form>\r\n    </section>\r\n    <section class=\"form-required\">\r\n        <div>required*</div>\r\n    </section>\r\n    <app-form-status [validity]= \"walletMeterForm.valid\" ></app-form-status>\r\n    <div>\r\n        <button  pButton label='{{ \"cancel\" | translate }}' icon=\"pi pi-times\" class=\"p-button-text purple-button-text\" (click)=\"cancelDialog()\"></button>\r\n        <button [disabled]=\"!walletMeterForm.valid\"  pButton label='{{ \"save\" | translate }}' icon=\"pi pi-check\" class=\"p-button-text purple-button-text\" (click)=\"saveDialog()\"></button>\r\n    </div>\r\n    <!--Dialogs-->\r\n    <p-confirmDialog class=\"purple-confirmdialog\" key=\"cancelDialog\" header=\"Cancel operation?\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n    <p-confirmDialog class=\"purple-confirmdialog\" key=\"saveDialog\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n//models\r\nimport { WalletMeter } from 'src/app/core/models/datamodels/WalletMeter';\r\nimport { WalletCreator } from 'src/app/core/models/datamodels/WalletCreator';\r\nimport { DynamicColumn } from 'src/app/core/models/utility/DynamicColumn';\r\nimport { IFormable } from 'src/app/core/models/utility/IFormable';\r\nimport { IRefreashable } from 'src/app/core/models/utility/IRefreshable';\r\nimport { PaginationParams } from 'src/app/core/models/utility/PaginationParams';\r\nimport { Wallet } from 'src/app/core/models/datamodels/Wallet';\r\nimport { Building } from 'src/app/core/models/datamodels/Building';\r\n\r\n//components\r\nimport { WalletFormComponent } from './wallet-form/wallet-form.component';\r\nimport { WalletMeterFormComponent } from './wallet-meter-form/wallet-meter-form.component';\r\nimport { BuildingFormComponent } from '../building-view/building-form/building-form.component';\r\n\r\n//services\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BuildingService } from 'src/app/core/services/building.service';\r\nimport { LocalService } from 'src/app/core/services/local.service';\r\nimport { WalletService } from 'src/app/core/services/wallet.service';\r\nimport { DialogService } from 'primeng/dynamicdialog';\r\n\r\n@Component({\r\n  selector: 'app-wallet-view',\r\n  templateUrl: './wallet-view.component.html',\r\n  styleUrls: ['./wallet-view.component.scss']\r\n})\r\n\r\nexport class WalletViewComponent implements OnInit, IRefreashable, IFormable {\r\n\r\n  public wallets: Wallet[];\r\n\r\n  public cols: DynamicColumn[];\r\n\r\n  public selectedWallet: Wallet;\r\n\r\n  public formHeader: string;\r\n\r\n  public isLoading: boolean = false; \r\n  \r\n  public paginationParams: PaginationParams;\r\n\r\n  public walletsCounter: number;\r\n\r\n  constructor(\r\n    private readonly router: Router, \r\n    private readonly walletService: WalletService, \r\n    private readonly buildingService: BuildingService, \r\n    public dialogService: DialogService,\r\n    private localStorage: LocalService,\r\n    private translateService: TranslateService){}\r\n  \r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'buildingAddress', header: 'buildingadress'},\r\n      {field : 'customerPrivilege', header: 'customerPrivilege'}\r\n    ];\r\n    this.paginationParams = {\r\n      first: 0,\r\n      rowsNumber: 5\r\n    };\r\n    this.refreshData(); \r\n  }\r\n\r\n\r\n  public editFormDialog(data: any): void {\r\n    throw new Error('Method not implemented (extension).');\r\n  }\r\n\r\n  public onWalletSelected(wallet: Wallet): void {\r\n    this.selectedWallet = wallet;\r\n  }\r\n\r\n  public updatePaginationParams(params: PaginationParams): void{\r\n    this.paginationParams = params;\r\n    this.refreshData();\r\n  }\r\n\r\n  public refreshData(): void {\r\n    this.isLoading = true;\r\n    this.walletService.countWalletByCustomerId(this.localStorage.getData(\"id\")).subscribe( (walletsCounter: number) => {\r\n      this.walletsCounter = walletsCounter;\r\n    });\r\n    this.walletService.getWalletByCustomerId(this.localStorage.getData(\"id\"), this.paginationParams.first, this.paginationParams.rowsNumber).subscribe((wallets: Wallet[]) => {\r\n      this.wallets = wallets;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  public onShowMetersClick(): void{\r\n    this.router.navigateByUrl(`/manager/wallets/${this.selectedWallet.id}/meters`);   \r\n  }\r\n\r\n  public onShowBuildingFormClick(): void{\r\n    const ref = this.dialogService.open(BuildingFormComponent,\r\n      {\r\n        header: this.formHeader,\r\n        data: this.selectedWallet.buildingId,\r\n        draggable: true,\r\n        resizable: true,\r\n        maximizable: true\r\n      });\r\n      ref.onClose.subscribe((building: Building) => {\r\n        if(building){\r\n          this.buildingService.updateBuilding(building).subscribe(() => {\r\n            this.refreshData();\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public createFormDialog(): void {\r\n    this.translateService.get(\"walletform\").subscribe(translation => {\r\n      const ref = this.dialogService.open(WalletFormComponent,\r\n        {\r\n          header: translation,\r\n          data: this.localStorage.getData('id'),\r\n          draggable: true,\r\n          resizable: true,\r\n          maximizable: true\r\n        });\r\n  \r\n      ref.onClose.subscribe((wallet: WalletCreator) => {\r\n        if(wallet){\r\n          this.walletService.createWallet(wallet.building, wallet.customer).subscribe(() => {\r\n            this.refreshData();\r\n          });        \r\n        } \r\n      });\r\n    })\r\n  }\r\n\r\n  public createFormDialogMeter(): void {\r\n    this.translateService.get(\"walletmeterform\").subscribe(translation => {\r\n      const ref = this.dialogService.open(WalletMeterFormComponent,\r\n        {\r\n          header: translation,\r\n          data: this.selectedWallet,\r\n          draggable: true,\r\n          resizable: true,\r\n          maximizable: true\r\n        });\r\n    \r\n        ref.onClose.subscribe((walletMeter: WalletMeter) => {\r\n          if(walletMeter){\r\n            this.walletService.createWalletMeter(walletMeter.wallet, walletMeter.meter).subscribe(() => {\r\n              this.refreshData();\r\n            });        \r\n          } \r\n        });\r\n    });\r\n  }\r\n\r\n  public isAdmin(): boolean{\r\n    return JSON.parse(this.localStorage.getData(\"roles\")).includes(\"ADMIN\");\r\n  }\r\n\r\n  public onShowChartClick(): void{\r\n    this.router.navigateByUrl(`/manager/chart/${this.selectedWallet.id}`);   \r\n  }\r\n\r\n  public isAdministrator(): boolean{\r\n    return this.selectedWallet == null || this.selectedWallet.customerPrivilege != \"Gestionnaire\"\r\n  }\r\n}\r\n","<div  class=\"wallet-view view\">\r\n    <section class=\"header-view\">\r\n\r\n    </section>\r\n    <section class=\"table-toolbar\">\r\n        <p-toolbar class=\"toolbar\" styleClass=\"mb-4 gap-2\">\r\n            <ng-template pTemplate=\"left\" class=\"left-side-toolbar\">\r\n                <button  pButton (click)=\"createFormDialog()\" label='{{ \"new\" | translate }}' icon=\"pi pi-plus\" class=\"p-button-sm mr-2 purple-button\"></button>\r\n                <button  pButton (click)=\"createFormDialogMeter()\" label='{{ \"addmeter\" | translate }}' [disabled]=\"selectedWallet == null\" icon=\"pi pi-plus\" class=\"p-button-sm mr-2 purple-button\"></button>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"right\" class=\"right-side-toolbar\">\r\n                <span *ngIf=\"isAdmin()\">\r\n                    <button  pButton label='{{ \"managebuilding\" | translate }}' (click)=\"onShowBuildingFormClick()\" [disabled]=\"selectedWallet == null\" icon=\"pi pi-building\" class=\"toolbar-btn p-button-sm mr-2 purple-button\"></button>\r\n                </span>\r\n                <button  pButton label='{{ \"showbuildmeter\" | translate }}' (click)=\"onShowMetersClick()\" [disabled]=\"selectedWallet == null\"  icon=\"pi pi-external-link\" class=\"toolbar-btn p-button-sm mr-2 purple-button\"></button>\r\n                <button  pButton (click)=\"onShowChartClick()\" [disabled]=\"isAdministrator()\"label='{{ \"visualcons\" | translate }}' icon=\"pi pi-info-circle\" class=\"p-button-sm purple-button\"></button>\r\n            </ng-template>\r\n        </p-toolbar>\r\n    </section>\r\n    <section class=\"table-container\">\r\n        <app-dynamic-table \r\n            [collection] = \"wallets\"\r\n            [totalRecords]=\"walletsCounter\" \r\n            [cols] = \"cols\" \r\n            [isLoading] = \"isLoading\"\r\n            [isEditable] = \"isAdmin()\"\r\n            [isDeletable] = \"isAdmin()\"\r\n            [isPaginable]=\"true\"\r\n            (onSelect) = \"onWalletSelected($event)\"\r\n            (onPageChange)=\"updatePaginationParams($event)\">\r\n        </app-dynamic-table>\r\n    </section>\r\n</div>\r\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { isArray, getEntries, normalizeXMLName, indent, stripHTML, assert, getKeys } from './utils.js';\nexport function _createFieldsMapper(fields) {\n    if (!fields\n        || isArray(fields) && !fields.length\n        || !isArray(fields) && !getKeys(fields).length)\n        return function (item) { return item; };\n    var mapper = isArray(fields)\n        ? fields.reduce(function (map, key) {\n            var _a;\n            return (__assign(__assign({}, map), (_a = {}, _a[key] = key, _a)));\n        }, Object.create(null))\n        : fields;\n    return function (item) {\n        if (isArray(item)) {\n            return item\n                .map(function (i) { return getEntries(i).reduce(function (map, _a) {\n                var _b = __read(_a, 2), key = _b[0], value = _b[1];\n                if (key in mapper) {\n                    map[mapper[key]] = value;\n                }\n                return map;\n            }, Object.create(null)); })\n                .filter(function (i) { return getKeys(i).length; });\n        }\n        return getEntries(item).reduce(function (map, _a) {\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\n            if (key in mapper) {\n                map[mapper[key]] = value;\n            }\n            return map;\n        }, Object.create(null));\n    };\n}\nexport function _prepareData(data) {\n    var MESSAGE_VALID_JSON_FAIL = 'Invalid export data. Please provide a valid JSON';\n    try {\n        return (typeof data === 'string' ? JSON.parse(data) : data);\n    }\n    catch (_a) {\n        throw new Error(MESSAGE_VALID_JSON_FAIL);\n    }\n}\nexport function _createJSONData(data, replacer, space) {\n    if (replacer === void 0) { replacer = null; }\n    var MESSAGE_VALID_JSON_FAIL = 'Invalid export data. Please provide valid JSON object';\n    try {\n        return JSON.stringify(data, replacer, space);\n    }\n    catch (_a) {\n        throw new Error(MESSAGE_VALID_JSON_FAIL);\n    }\n}\nexport function _createTableMap(data) {\n    return data.map(getEntries).reduce(function (tMap, rowKVs, rowIndex) {\n        return rowKVs.reduce(function (map, _a) {\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\n            var columnValues = map[key] || Array.from({ length: data.length }).map(function (_) { return ''; });\n            columnValues[rowIndex] =\n                (typeof value !== 'string' ? JSON.stringify(value) : value) || '';\n            map[key] = columnValues;\n            return map;\n        }, tMap);\n    }, Object.create(null));\n}\nexport function _createTableEntries(tableMap, beforeTableEncode) {\n    if (beforeTableEncode === void 0) { beforeTableEncode = function (i) { return i; }; }\n    return beforeTableEncode(getEntries(tableMap).map(function (_a) {\n        var _b = __read(_a, 2), fieldName = _b[0], fieldValues = _b[1];\n        return ({\n            fieldName: fieldName,\n            fieldValues: fieldValues,\n        });\n    }));\n}\nfunction encloser(value) {\n    var enclosingCharacter = /,|\"|\\n/.test(value) ? '\"' : '';\n    var escaped = value.replace(/\"/g, '\"\"');\n    return \"\".concat(enclosingCharacter).concat(escaped).concat(enclosingCharacter);\n}\nvar defaultCreateCSVDataOption = { beforeTableEncode: function (i) { return i; }, delimiter: ',' };\nexport function createCSVData(data, options) {\n    if (options === void 0) { options = {}; }\n    var _a = __assign(__assign({}, defaultCreateCSVDataOption), options), beforeTableEncode = _a.beforeTableEncode, delimiter = _a.delimiter;\n    if (!data.length)\n        return '';\n    var tableMap = _createTableMap(data);\n    var tableEntries = _createTableEntries(tableMap, beforeTableEncode);\n    var head = tableEntries.map(function (_a) {\n        var fieldName = _a.fieldName;\n        return fieldName;\n    }).join(delimiter) + '\\r\\n';\n    var columns = tableEntries.map(function (_a) {\n        var fieldValues = _a.fieldValues;\n        return fieldValues;\n    })\n        .map(function (column) { return column.map(encloser); });\n    var rows = columns.reduce(function (mergedColumn, column) { return mergedColumn.map(function (value, rowIndex) { return \"\".concat(value).concat(delimiter).concat(column[rowIndex]); }); });\n    return head + rows.join('\\r\\n');\n}\nexport function _renderTableHTMLText(data, beforeTableEncode) {\n    assert(data.length > 0);\n    var tableMap = _createTableMap(data);\n    var tableEntries = _createTableEntries(tableMap, beforeTableEncode);\n    var head = tableEntries.map(function (_a) {\n        var fieldName = _a.fieldName;\n        return fieldName;\n    })\n        .join('</b></th><th><b>');\n    var columns = tableEntries.map(function (_a) {\n        var fieldValues = _a.fieldValues;\n        return fieldValues;\n    })\n        .map(function (column) { return column.map(function (value) { return \"<td>\".concat(value, \"</td>\"); }); });\n    var rows = columns.reduce(function (mergedColumn, column) { return mergedColumn\n        .map(function (value, rowIndex) { return \"\".concat(value).concat(column[rowIndex]); }); });\n    return \"\\n    <table>\\n      <thead>\\n        <tr><th><b>\".concat(head, \"</b></th></tr>\\n      </thead>\\n      <tbody>\\n        <tr>\").concat(rows.join(\"</tr>\\n        <tr>\"), \"</tr>\\n      </tbody>\\n    </table>\\n  \");\n}\nvar defaultCreateXLSDataOptions = { beforeTableEncode: function (i) { return i; } };\nexport function createXLSData(data, options) {\n    var beforeTableEncode = __assign(__assign({}, defaultCreateXLSDataOptions), options).beforeTableEncode;\n    if (!data.length)\n        return '';\n    var content = \"<html>\\n  <head>\\n    <meta charset=\\\"UTF-8\\\" />\\n  </head >\\n  <body>\\n    \".concat(_renderTableHTMLText(data, beforeTableEncode), \"\\n  </body>\\n</html >\\n\");\n    return content;\n}\nexport function createXMLData(data) {\n    var content = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><!DOCTYPE base>\\n\".concat(_renderXML(data, 'base'), \"\\n\");\n    return content;\n}\nfunction _renderXML(data, tagName, arrayElementTag, spaces) {\n    if (arrayElementTag === void 0) { arrayElementTag = 'element'; }\n    if (spaces === void 0) { spaces = 0; }\n    var tag = normalizeXMLName(tagName);\n    var indentSpaces = indent(spaces);\n    if (data === null || data === undefined) {\n        return \"\".concat(indentSpaces, \"<\").concat(tag, \" />\");\n    }\n    var content = isArray(data)\n        ? data.map(function (item) { return _renderXML(item, arrayElementTag, arrayElementTag, spaces + 2); }).join('\\n')\n        : typeof data === 'object'\n            ? getEntries(data)\n                .map(function (_a) {\n                var _b = __read(_a, 2), key = _b[0], value = _b[1];\n                return _renderXML(value, key, arrayElementTag, spaces + 2);\n            }).join('\\n')\n            : indentSpaces + '  ' + stripHTML(String(data));\n    var contentWithWrapper = \"\".concat(indentSpaces, \"<\").concat(tag, \">\\n\").concat(content, \"\\n\").concat(indentSpaces, \"</\").concat(tag, \">\");\n    return contentWithWrapper;\n}\n","import { assert, isArray, normalizeFileName } from './utils.js';\nimport { downloadFile } from './processors.js';\nimport { _prepareData, _createJSONData, createCSVData, createXLSData, createXMLData, _createFieldsMapper } from './converters.js';\nimport { exportTypes } from './types.js';\nfunction exportFromJSON(_a) {\n    var data = _a.data, _b = _a.fileName, fileName = _b === void 0 ? 'download' : _b, extension = _a.extension, _c = _a.fileNameFormatter, fileNameFormatter = _c === void 0 ? function (name) { return name.replace(/\\s+/, '_'); } : _c, fields = _a.fields, _d = _a.exportType, exportType = _d === void 0 ? 'txt' : _d, _e = _a.replacer, replacer = _e === void 0 ? null : _e, _f = _a.space, space = _f === void 0 ? 4 : _f, _g = _a.processor, processor = _g === void 0 ? downloadFile : _g, _h = _a.withBOM, withBOM = _h === void 0 ? false : _h, _j = _a.beforeTableEncode, beforeTableEncode = _j === void 0 ? function (i) { return i; } : _j, _k = _a.delimiter, delimiter = _k === void 0 ? ',' : _k;\n    var MESSAGE_IS_ARRAY_FAIL = 'Invalid export data. Please provide an array of objects';\n    var MESSAGE_UNKNOWN_EXPORT_TYPE = \"Can't export unknown data type \".concat(exportType, \".\");\n    var MESSAGE_FIELD_INVALID = \"Can't export string data to \".concat(exportType, \".\");\n    if (typeof data === 'string') {\n        switch (exportType) {\n            case 'txt':\n            case 'css':\n            case 'html': {\n                return processor(data, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : exportType, fileNameFormatter));\n            }\n            default:\n                throw new Error(MESSAGE_FIELD_INVALID);\n        }\n    }\n    var fieldsMapper = _createFieldsMapper(fields);\n    var safeData = fieldsMapper(_prepareData(data));\n    var JSONData = _createJSONData(safeData, replacer, space);\n    switch (exportType) {\n        case 'txt':\n        case 'css':\n        case 'html': {\n            return processor(JSONData, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : exportType, fileNameFormatter));\n        }\n        case 'json': {\n            return processor(JSONData, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : 'json', fileNameFormatter));\n        }\n        case 'csv': {\n            assert(isArray(safeData), MESSAGE_IS_ARRAY_FAIL);\n            var BOM = '\\ufeff';\n            var CSVData = createCSVData(safeData, { beforeTableEncode: beforeTableEncode, delimiter: delimiter });\n            var content = withBOM ? BOM + CSVData : CSVData;\n            return processor(content, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : 'csv', fileNameFormatter));\n        }\n        case 'xls': {\n            assert(isArray(safeData), MESSAGE_IS_ARRAY_FAIL);\n            var content = createXLSData(safeData, { beforeTableEncode: beforeTableEncode });\n            return processor(content, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : 'xls', fileNameFormatter));\n        }\n        case 'xml': {\n            var content = createXMLData(safeData);\n            return processor(content, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : 'xml', fileNameFormatter));\n        }\n        default:\n            throw new Error(MESSAGE_UNKNOWN_EXPORT_TYPE);\n    }\n}\nexportFromJSON.types = exportTypes;\nexportFromJSON.processors = { downloadFile: downloadFile };\nexport default exportFromJSON;\n","import exportFromJSON from './exportFromJSON.js';\nexport default exportFromJSON;\n","export function generateDataURI(content, type, byBlob) {\n    switch (type) {\n        case 'txt': {\n            var blobType = 'text/plain;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        case 'css': {\n            var blobType = 'text/css;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        case 'html': {\n            var blobType = 'text/html;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        case 'json': {\n            var blobType = 'text/json;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        case 'csv': {\n            var blobType = 'text/csv;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        case 'xls': {\n            var blobType = 'text/application/vnd.ms-excel;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        case 'xml': {\n            var blobType = 'text/application/xml;charset=utf-8';\n            if (byBlob)\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\n        }\n        default: {\n            return '';\n        }\n    }\n}\nexport function downloadFile(content, type, fileName, byBlob) {\n    if (fileName === void 0) { fileName = 'download'; }\n    if (byBlob === void 0) { byBlob = true; }\n    var dataURI = generateDataURI(content, type, byBlob);\n    var anchor = document.createElement('a');\n    anchor.href = dataURI;\n    anchor.download = fileName;\n    anchor.setAttribute('style', 'visibility:hidden');\n    document.body.appendChild(anchor);\n    anchor.dispatchEvent(new MouseEvent('click', {\n        bubbles: false,\n        cancelable: false,\n        view: window,\n    }));\n    document.body.removeChild(anchor);\n}\n","export var exportTypes = {\n    txt: 'txt',\n    css: 'css',\n    html: 'html',\n    json: 'json',\n    csv: 'csv',\n    xls: 'xls',\n    xml: 'xml',\n};\n","export function isArray(data) {\n    return Object.prototype.toString.call(data) === '[object Array]';\n}\nexport function assert(condition, msg) {\n    if (!condition)\n        throw new Error(msg);\n}\nexport function getValues(data) {\n    return Object.keys(data).map(function (key) { return data[key]; });\n}\nexport function getKeys(data) {\n    return Object.keys(data);\n}\nexport function getEntries(data) {\n    return Object.keys(data).map(function (key) { return [key, data[key]]; });\n}\nexport function normalizeFileName(fileName, extension, fileNameFormatter) {\n    var suffix = '.' + extension;\n    var extensionPattern = new RegExp(\"(\\\\\".concat(extension, \")?$\"));\n    return fileNameFormatter(fileName).replace(extensionPattern, suffix);\n}\nexport function normalizeXMLName(name) {\n    '555xmlHello .  world!'.trim().replace(/^([0-9,;]|(xml))+/, '');\n    return name.replace(/[^_a-zA-Z 0-9:\\-\\.]/g, '').replace(/^([ 0-9-:\\-\\.]|(xml))+/i, '').replace(/ +/g, '-');\n}\nexport function indent(spaces) {\n    return Array(spaces + 1).join(' ');\n}\nexport function stripHTML(text) {\n    return text.replace(/([<>&])/g, function (_, $1) {\n        switch ($1) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return '';\n        }\n    });\n}\n"],"names":["Contract","constructor","id","startDate","endDate","providerId","contractType","buildingId","customerId","HttpClient","environment","BuildingService","httpClient","baseUrl","apiURL","getAllBuildings","offset","limit","get","countAllBuildings","getBuildingByCustomerId","countBuildingByCustomerId","getBuildingById","createBuilding","building","post","responseType","deleteBuilding","delete","updateBuilding","put","factory","providedIn","ContractService","getAllContracts","getContractsByCustomerId","countContractByCustomerId","getContractsByProviderId","countContractByProviderId","createContract","contract","getAllContractTypes","getAllEnergyTypes","updateContract","getEnergyTypeByProviderId","getContractEnergyTypeByContractId","contractId","createContractEnergyType","contractEnergyType","updateContractEnergyType","deleteContractEnergyTypeById","MeterService","getAllMeter","getMetersByBuildingId","getMetersByWalletId","walletId","getMeterHistoryByMeterId","meterId","columnName","order","getMeterHistoryByMeterIdUsingDate","countMeterHistoryByMeterId","createMeter","meter","deleteMeter","updateMeter","deleteMeterHistoryById","updateMeterHistory","meterHistory","createMeterHistory","ProviderService","getAllProviders","WalletService","getAllWallets","getWalletByCustomerId","undefined","countWalletByCustomerId","createWallet","createWalletMeter","FormBuilder","Validators","DynamicDialogRef","DynamicDialogConfig","ConfirmationService","TranslateService","BuildingFormComponent","fb","buildingService","ref","config","confirmationService","translateService","ngOnInit","initForm","buildingForm","group","buildingName","city","required","number","room","street","zipCode","main","data","modeForm","toPromise","then","_building","updateForm","cancelDialog","subscribe","translation","confirm","message","key","accept","close","saveDialog","valid","value","patchValue","selectors","features","decls","vars","consts","template","i0","ctx","ActivatedRoute","Router","LocalService","RouteHistoryService","DialogService","BuildingViewComponent","activatedRoute","router","dialogService","routeHistory","localStorage","cols","field","header","paginationParams","first","rowsNumber","refreshData","createFormDialog","open","draggable","resizable","maximizable","onClose","currentCustomerId","editFormDialog","onBuildingSelected","selectedBuilding","updatePaginationParams","params","JSON","parse","getData","includes","snapshot","isLoading","loadBuildingsByCustomerId","buildingsCounter","buildings","onShowMetersClick","navigateByUrl","onPreviousClick","back","isAdmin","onShowChartClick","UIChart","exportFromJSON","ChartViewComponent","meterService","Map","ngAfterViewInit","setTimeout","chart","reinit","basicOptions","plugins","datalabels","align","anchor","borderRadius","backgroundColor","color","legend","display","labels","chartTable","items","label","command","exportJSON","exportXML","showSeven","onLangChange","event","refreshLabels","basicData","datasets","forEach","element","translateName","_hasMonth","refreshLabelsMonth","checked","index","length","parts","split","translateMonth","_currentId","response","_meters","historiesCreator","padTo2Digits","num","toString","padStart","formatDate","date","getFullYear","getMonth","getDate","join","meters","_histories","clear","set","getLastSevenDay","Date","dataIndex","setDate","push","names","energyType","initialiazeDatasetElement","colors","array","valueData","history","addDataTableChart","getByMonth","setFullYear","currentDate","month","toLocaleString","toLocaleLowerCase","year","setMonth","getByYear","isLoad","showMonth","showYear","fileName","exportType","types","json","xml","borderColor","tension","viewQuery","CustomerService","ContractFormComponent","contractService","customerService","contractTypes","energyTypes","energies","loadCustomer","_contract","customerForm","name","surname","contractForm","loadCustomerBuilding","updateContractForm","fullAdress","getCustomerById","customer","_customer","_newContract","isReadOnly","onSearch","onClean","ContractViewComponent","roles","getItem","onShowContractPricesClick","selectedContract","onContractSelected","loadProviderContracts","loadCustomerContracts","contractsCounter","contracts","PriceFormComponent","priceForm","dayPrice","nightPrice","_contractEnergyType","energyTypeId","disable","PriceViewComponent","currentContractId","map","e","ce","energiesPrices","deletePrice","onPriceSelected","energy","selectedContractEnergy","CustomerFormComponent","phoneNumber","email","language","CustomerViewComponent","createCustomer","updateCustomer","onCustomerSelected","selectedCustomer","deleteCustomer","deleteCustomerById","onShowBuildingsClick","countCustomerByProviderId","customersCounter","getCustomersByProviderId","customers","EventEmitter","DynamicTableComponent","loadCollectionLazy","rows","onPageChange","emit","onEditClick","rowData","onEdit","onDeleteClick","onDelete","onSelectionSend","onSelect","selectedItem","parseData","parseBoolean","reduce","acc","obj","match","booleanField","inputs","collection","totalRecords","isEditable","isDeletable","isPaginable","outputs","RouterModule","MeterViewComponent","ProviderViewComponent","WalletViewComponent","routes","path","component","children","ManagerRoutingModule","forChild","imports","exports","CommonModule","FormsModule","ReactiveFormsModule","PrimengModule","AvatarModule","ManagerComponent","MenuComponent","MeterFormComponent","MeterHistoryComponent","LanguageSelectorModule","UserCardComponent","NotificationComponent","NotificationFormComponent","MeterHistoryFormComponent","WalletFormComponent","WalletMeterFormComponent","FormStatusModule","TranslateModule","ManagerModule","directTranslate","declarations","meterForm","numeric","_meter","meterHistoryForm","_meterHistory","loadHistoricLazy","historiesCounter","sortField","sortOrder","meterHistoric","deleteMeterHistory","onMeterHistorySelected","selectedMeterHistory","currentBuildingId","onMeterSelected","selectedMeter","onShowHistoryClick","providerService","providers","_customerId","walletForm","walletCreator","fullName","walletMeterForm","wallet","_wallet","walletMeter","walletService","Error","onWalletSelected","selectedWallet","walletsCounter","wallets","onShowBuildingFormClick","formHeader","createFormDialogMeter","isAdministrator","customerPrivilege","__assign","Object","assign","t","s","i","n","arguments","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","next","done","error","isArray","getEntries","normalizeXMLName","indent","stripHTML","assert","getKeys","_createFieldsMapper","fields","item","mapper","_a","create","_b","filter","_prepareData","MESSAGE_VALID_JSON_FAIL","_createJSONData","replacer","space","stringify","_createTableMap","tMap","rowKVs","rowIndex","columnValues","Array","from","_","_createTableEntries","tableMap","beforeTableEncode","fieldName","fieldValues","encloser","enclosingCharacter","test","escaped","replace","concat","defaultCreateCSVDataOption","delimiter","createCSVData","options","tableEntries","head","columns","column","mergedColumn","_renderTableHTMLText","defaultCreateXLSDataOptions","createXLSData","content","createXMLData","_renderXML","tagName","arrayElementTag","spaces","tag","indentSpaces","String","contentWithWrapper","normalizeFileName","downloadFile","exportTypes","extension","_c","fileNameFormatter","_d","_e","_f","_g","processor","_h","withBOM","_j","_k","MESSAGE_IS_ARRAY_FAIL","MESSAGE_UNKNOWN_EXPORT_TYPE","MESSAGE_FIELD_INVALID","fieldsMapper","safeData","JSONData","BOM","CSVData","processors","generateDataURI","type","byBlob","blobType","URL","createObjectURL","Blob","encodeURIComponent","dataURI","document","createElement","href","download","setAttribute","body","appendChild","dispatchEvent","MouseEvent","bubbles","cancelable","view","window","removeChild","txt","css","html","csv","xls","condition","msg","getValues","keys","suffix","extensionPattern","RegExp","trim","text","$1"],"sourceRoot":"webpack:///","x_google_ignoreList":[44,45,46,47,48,49]}